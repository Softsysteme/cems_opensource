<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sample_database_XLS_ns="http://www.convertigo.com/convertigo/projects/sample_database_XLS" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://www.convertigo.com/convertigo/projects/sample_database_XLS">
    <xsd:complexType name="ConvertigoError">
        <xsd:sequence>
            <xsd:element name="context" type="sample_database_XLS_ns:ConvertigoErrorContext"/>
            <xsd:element name="exception" type="xsd:string"/>
            <xsd:element name="message" type="xsd:string"/>
            <xsd:element name="stacktrace" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="ConvertigoErrorContextVariable">
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="value" type="xsd:string"/>
    </xsd:complexType>
    <xsd:complexType name="ConvertigoErrorContext">
        <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="variable" type="sample_database_XLS_ns:ConvertigoErrorContextVariable"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="xlsFileConnector__selectFromPeopleResponseData"/>
    <xsd:element name="xlsFileConnector__selectFromPeople" type="sample_database_XLS_ns:xlsFileConnector__selectFromPeopleRequestData">
        <xsd:annotation>
            <xsd:documentation><![CDATA[Selects all information data from 'People' Excel table. Can not be executed directly as the database URL has to be updated to your local project path. Run the sample sequence which implements that behavior.
]]></xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="xlsFileConnector__selectFromPeopleResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="response" type="sample_database_XLS_ns:xlsFileConnector__selectFromPeopleResponseData"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="xlsFileConnector__selectFromPeopleRequestData">
        <xsd:annotation>
            <xsd:documentation><![CDATA[Selects all information data from 'People' Excel table. Can not be executed directly as the database URL has to be updated to your local project path. Run the sample sequence which implements that behavior.
]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence/>
    </xsd:complexType>
    <xsd:element name="selectFromPeopleTable" type="sample_database_XLS_ns:selectFromPeopleTableRequestData">
        <xsd:annotation>
            <xsd:documentation><![CDATA[Sample sequence that computes the folder of the actual project + the xls folder into which is the file. The sequence takes the Excel file name as a variable so this name has to be updated also dynamically in the connection string. The connection string overrides the connector database URL, so the request is made in one of the two local Excel files.
]]></xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="selectFromPeopleTableResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="response" type="sample_database_XLS_ns:selectFromPeopleTableResponseData"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="selectFromPeopleTableRequestData">
        <xsd:annotation>
            <xsd:documentation><![CDATA[Sample sequence that computes the folder of the actual project + the xls folder into which is the file. The sequence takes the Excel file name as a variable so this name has to be updated also dynamically in the connection string. The connection string overrides the connector database URL, so the request is made in one of the two local Excel files.
]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="fileName" type="xsd:string">
                <xsd:annotation>
                    <xsd:appinfo>new variable</xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="selectFromPeopleTableResponseData">
        <xsd:sequence>
            <xsd:element minOccurs="0" name="error" type="sample_database_XLS_ns:ConvertigoError"/>
            <xsd:element minOccurs="0" name="connectionString" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[Concats the parent folder path generated by the JS_computeDatabasePath step to the file name passed as input variable. This connectionString will then be used to update the connection string of the SQL Connector, so as the SQL connector can connect to the XLS files included in your local project.
]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="inputVars1337174735229StepType">
        <xsd:sequence>
            <xsd:element minOccurs="0" name="fileName" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="transaction1337176002939StepType">
        <xsd:annotation/>
        <xsd:sequence>
            <xsd:element minOccurs="0" name="document" type="sample_database_XLS_ns:xlsFileConnector__selectFromPeopleResponseData">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[Selects all information data from 'People' Excel table. Can not be executed directly as the database URL has to be updated to your local project path. Run the sample sequence which implements that behavior.
]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
</xsd:schema>
