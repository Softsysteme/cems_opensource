<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:lib_GoogleSpreadsheets_ns="http://www.convertigo.com/convertigo/projects/lib_GoogleSpreadsheets" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://www.convertigo.com/convertigo/projects/lib_GoogleSpreadsheets">
<xsd:complexType name="ConvertigoErrorContext">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="variable" type="lib_GoogleSpreadsheets_ns:ConvertigoErrorContextVariable"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ConvertigoErrorContextVariable">
<xsd:attribute name="name" type="xsd:string"/>
<xsd:attribute name="value" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="ConvertigoError">
<xsd:sequence>
<xsd:element name="context" type="lib_GoogleSpreadsheets_ns:ConvertigoErrorContext"/>
<xsd:element name="exception" type="xsd:string"/>
<xsd:element name="message" type="xsd:string"/>
<xsd:element name="stacktrace" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feed_categoryType">
<xsd:attribute name="label" type="xsd:string"/>
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feed_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feed_authorType">
<xsd:sequence>
<xsd:element minOccurs="0" name="name" type="xsd:string"/>
<xsd:element minOccurs="0" name="email" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feed_entry_editedType"/>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feed_entry_categoryType">
<xsd:attribute name="label" type="xsd:string"/>
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feed_entry_contentType">
<xsd:attribute name="src" type="xsd:anyURI"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feed_entry_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feed_entry_authorType">
<xsd:sequence>
<xsd:element minOccurs="0" name="name" type="xsd:string"/>
<xsd:element minOccurs="0" name="email" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feed_entry_lastModifiedByType">
<xsd:sequence>
<xsd:element minOccurs="0" name="name" type="xsd:string"/>
<xsd:element minOccurs="0" name="email" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feed_entry_writersCanInviteType">
<xsd:attribute name="value" type="xsd:boolean"/>
</xsd:complexType>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feed_entry_feedLinkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feed_entryType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="published" type="xsd:date"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="edited" type="lib_GoogleSpreadsheets_ns:GoogleDocsConnector_SearchDocuments_document_feed_entry_editedType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:GoogleDocsConnector_SearchDocuments_document_feed_entry_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element minOccurs="0" name="content" type="lib_GoogleSpreadsheets_ns:GoogleDocsConnector_SearchDocuments_document_feed_entry_contentType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:GoogleDocsConnector_SearchDocuments_document_feed_entry_linkType"/>
<xsd:element minOccurs="0" name="author" type="lib_GoogleSpreadsheets_ns:GoogleDocsConnector_SearchDocuments_document_feed_entry_authorType"/>
<xsd:element minOccurs="0" name="resourceId" type="xsd:string"/>
<xsd:element minOccurs="0" name="lastModifiedBy" type="lib_GoogleSpreadsheets_ns:GoogleDocsConnector_SearchDocuments_document_feed_entry_lastModifiedByType"/>
<xsd:element minOccurs="0" name="lastViewed" type="xsd:date"/>
<xsd:element minOccurs="0" name="quotaBytesUsed" type="xsd:byte"/>
<xsd:element minOccurs="0" name="writersCanInvite" type="lib_GoogleSpreadsheets_ns:GoogleDocsConnector_SearchDocuments_document_feed_entry_writersCanInviteType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="feedLink" type="lib_GoogleSpreadsheets_ns:GoogleDocsConnector_SearchDocuments_document_feed_entry_feedLinkType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="GoogleDocsConnector_SearchDocuments_document_feedType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:GoogleDocsConnector_SearchDocuments_document_feed_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:GoogleDocsConnector_SearchDocuments_document_feed_linkType"/>
<xsd:element minOccurs="0" name="author" type="lib_GoogleSpreadsheets_ns:GoogleDocsConnector_SearchDocuments_document_feed_authorType"/>
<xsd:element minOccurs="0" name="startIndex" type="xsd:byte"/>
<xsd:element minOccurs="0" name="entry" type="lib_GoogleSpreadsheets_ns:GoogleDocsConnector_SearchDocuments_document_feed_entryType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__SimpleLoginWithCaptchaAnswer" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__SimpleLoginWithCaptchaAnswerRequestData">
<xsd:annotation/>
</xsd:element>
<xsd:element name="SpreadsheetConnector__SimpleLoginWithCaptchaAnswerResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__SimpleLoginWithCaptchaAnswerResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__SimpleLoginWithCaptchaAnswerRequestData">
<xsd:annotation/>
<xsd:sequence>
<xsd:element name="username" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>User email</xsd:appinfo>
<xsd:documentation><![CDATA[User's full email address. It must include the domain (i.e. johndoe@gmail.com).]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="password" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Password</xsd:appinfo>
<xsd:documentation><![CDATA[User's password.]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="accountType" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Google account type</xsd:appinfo>
<xsd:documentation><![CDATA[Type of account to request authorization for. Possible values are:

GOOGLE (get authorization for a Google account only)
HOSTED (get authorization for a hosted account only)
HOSTED_OR_GOOGLE (get authorization first for a hosted account; if attempt fails, get authorization for a Google account)

Use HOSTED_OR_GOOGLE if you're not sure which type of account you want authorization for. If the user information matches both a hosted and a Google account, only the hosted account is authorized. ]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="service" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Google service</xsd:appinfo>
<xsd:documentation><![CDATA[Name of the Google service you're requesting authorization for. Each service using the Authorization service is assigned a name value; for example, the name associated with Google Calendar is 'cl'. This parameter is required when accessing services based on Google Data APIs. For specific service names, refer to the service documentation.

Here the connector accesses to Spreadsheets, so the service name is "wise".]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="source" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Application source</xsd:appinfo>
<xsd:documentation><![CDATA[Short string identifying your application, for logging purposes. This string should take the form:
"companyName-applicationName-versionID". ]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="loginToken" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>(optional) Captcha token.</xsd:appinfo>
<xsd:documentation><![CDATA[(optional) Token representing the specific CAPTCHA challenge. Google supplies this token and the CAPTCHA image URL in a login failed response with the error code "CaptchaRequired".]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="captchaString" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>(optional) Captcha answer string</xsd:appinfo>
<xsd:documentation><![CDATA[(optional) String entered by the user as an answer to a CAPTCHA challenge.]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__SimpleLoginWithCaptchaAnswerResponseData"/>
<xsd:element name="SpreadsheetConnector__WorksheetDeleteBrokenTest" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__WorksheetDeleteBrokenTestRequestData">
<xsd:annotation/>
</xsd:element>
<xsd:element name="SpreadsheetConnector__WorksheetDeleteBrokenTestResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__WorksheetDeleteBrokenTestResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__WorksheetDeleteBrokenTestRequestData">
<xsd:annotation/>
<xsd:sequence>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>new variable</xsd:appinfo>
</xsd:annotation>
</xsd:element>
<xsd:element name="worksheetID" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>new variable</xsd:appinfo>
</xsd:annotation>
</xsd:element>
<xsd:element name="etag" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>new variable</xsd:appinfo>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__WorksheetDeleteBrokenTestResponseData"/>
<xsd:complexType name="SpreadsheetConnector__HelperGetSpreadsheetKeyResponseData">
<xsd:sequence>
<xsd:element name="spreadsheetKey" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__HelperGetWorksheetIdResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="worksheetID" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__HelperGetTableNumberResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="tableNumber" type="xsd:byte"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__HelperGetListRowIdResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="listRowId" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__HelperGetListRowId" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetListRowIdRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a list row ID by splitting list row entry data from the list row metafeed.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__HelperGetListRowIdResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetListRowIdResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__HelperGetListRowIdRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a list row ID by splitting list row entry data from the list row metafeed.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="worksheetID" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Worksheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the sheet parameter which is the worksheet ID.



Example :



        <entry gd:etag="&quot;U1RIVxJBSSt7ImBvA1c.&quot;">

            <id>http://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6</id>

            <updated>2010-05-20T12:49:59.492Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-05-20T12:49:59.492Z</app:edited>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#worksheet"/>

            <title>Sheet1</title>

            <content src="http://spreadsheets.google.com/feeds/list/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/cells/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" rel="http://schemas.google.com/spreadsheets/2006#cellsfeed" type="application/atom+xml"/>



            <link href="http://spreadsheets.google.com/tq?key=0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE&amp;sheet=od6" rel="http://schemas.google.com/visualization/2008#visualizationApi" type="application/atom+xml"/>



            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="edit" type="application/atom+xml"/>

            <gs:rowCount>100</gs:rowCount>

            <gs:colCount>20</gs:colCount>

        </entry>



To easily get the worksheet ID from the worksheet metafeed, you can use the "HelperGetWorksheetId" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheets metafeed, the URL given in the <id> element of the spreadsheet entry is the spreadsheet id URL.

Note that the key value that appears here  and that is retrieved by this transaction is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



To easily get the spreadsheet key from the spreadsheets metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="listRowIdUrl" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>List row id URL</xsd:appinfo>
<xsd:documentation><![CDATA[In the list row metafeed, the URL given in the <id> element of the row entry is the list row id URL.



Example :



	<entry gd:etag="&quot;EwIYUUZ5ZSt7ImBqDhVXTg..&quot;">

            <id>http://spreadsheets.google.com/feeds/list/td0ZjT6ZK_6JTa8m4CARnFg/od6/ciyn3</id>

            <updated>2010-06-16T14:13:46.150Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-16T14:13:46.150Z</app:edited>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#list"/>

            <title>search</title>

            <content>title2: maps, title3: API</content>

            <link href="https://spreadsheets.google.com/feeds/list/td0ZjT6ZK_6JTa8m4CARnFg/od6/private/full/ciyn3" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/list/td0ZjT6ZK_6JTa8m4CARnFg/od6/private/full/ciyn3" rel="edit" type="application/atom+xml"/>

            <gsx:title1>search</gsx:title1>

            <gsx:title2>maps</gsx:title2>

            <gsx:title3>API</gsx:title3>

        </entry>


]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__HelperGetSpreadsheetKey" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetSpreadsheetKeyRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a spreadsheet key by splitting spreadsheet entry data from the spreadsheet metafeed.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__HelperGetSpreadsheetKeyResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetSpreadsheetKeyResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__HelperGetSpreadsheetKeyRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a spreadsheet key by splitting spreadsheet entry data from the spreadsheet metafeed.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="spreadsheetIdUrl" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet id URL</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheets metafeed, the URL given in the <id> element of the spreadsheet entry is the spreadsheet id URL.

Note that the key value that appears here  and that is retrieved by this transaction is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.





Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__HelperGetTableNumber" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetTableNumberRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a table number by splitting table entry data from the table metafeed.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__HelperGetTableNumberResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetTableNumberResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__HelperGetTableNumberRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a table number by splitting table entry data from the table metafeed.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="tableIdUrl" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Table id URL</xsd:appinfo>
<xsd:documentation><![CDATA[In the tables metafeed, the URL given in the <id> element of the table entry is the table id URL.



Example :



	<entry gd:etag="&quot;CERXVEQNByt7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0</id>

            <updated>2010-06-11T14:47:40.261Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-11T14:47:40.261Z</app:edited>

            <category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/spreadsheets/2006#table"/>

            <title>Table2</title>

            <summary>This is a list of all who have registered to vote.</summary>

            <content src="http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0" type="application/atom+xml;type=feed"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="edit" type="application/atom+xml"/>

            <gs:worksheet name="Feuille2"/>

            <gs:header row="1"/>

            <gs:options allCols="false" allRows="false"/>

            <gs:data insertionMode="overwrite" numRows="3" startRow="5">

                <gs:column index="D" name="fourth column"/>

                <gs:column index="C" name="third column"/>

                <gs:column index="A" name="first column"/>

            </gs:data>

        </entry>
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheets metafeed, the URL given in the <id> element of the spreadsheet entry is the spreadsheet id URL.

Note that the key value that appears here  and that is retrieved by this transaction is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



To easily get the spreadsheet key from the spreadsheets metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__HelperGetWorksheetId" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetWorksheetIdRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a worksheet ID by splitting worksheet entry data from the worksheet metafeed.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__HelperGetWorksheetIdResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetWorksheetIdResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__HelperGetWorksheetIdRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a worksheet ID by splitting worksheet entry data from the worksheet metafeed.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[<![CDATA[<![CDATA[In the spreadsheets metafeed, the URL given in the <id> element of the spreadsheet entry is the spreadsheet id URL.

Note that the key value that appears here  and that is retrieved by this transaction is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



To easily get the spreadsheet key from the spreadsheets metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.

]]]]]]><![CDATA[><![CDATA[>]]]]><![CDATA[>
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="worksheetIdUrl" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Worksheet id URL</xsd:appinfo>
<xsd:documentation><![CDATA[<![CDATA[<![CDATA[In the worksheet metafeed, the URL given in the <id> element of the worksheet entry is the worksheet id URL.



Example :



        <entry gd:etag="&quot;U1RIVxJBSSt7ImBvA1c.&quot;">

            <id>http://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6</id>

            <updated>2010-05-20T12:49:59.492Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-05-20T12:49:59.492Z</app:edited>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#worksheet"/>

            <title>Sheet1</title>

            <content src="http://spreadsheets.google.com/feeds/list/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/cells/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" rel="http://schemas.google.com/spreadsheets/2006#cellsfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/tq?key=0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE&amp;sheet=od6" rel="http://schemas.google.com/visualization/2008#visualizationApi" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="edit" type="application/atom+xml"/>

            <gs:rowCount>100</gs:rowCount>

            <gs:colCount>20</gs:colCount>

        </entry>

]]]]]]><![CDATA[><![CDATA[>]]]]><![CDATA[>
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__LoginResponseData">
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__SpreadsheetsList" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__SpreadsheetsListRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Retrieves a list of the currently authenticated user's spreadsheets.



The result is a "metafeed," a feed that lists all of that user's feeds of a particular type; in this case, each entry in the feed represents a spreadsheet associated with the user.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__SpreadsheetsListResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__SpreadsheetsListResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__SpreadsheetsListRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Retrieves a list of the currently authenticated user's spreadsheets.



The result is a "metafeed," a feed that lists all of that user's feeds of a particular type; in this case, each entry in the feed represents a spreadsheet associated with the user.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_SpreadsheetsList_document_feed_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_SpreadsheetsList_document_feed_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_SpreadsheetsList_document_feed_entry_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_SpreadsheetsList_document_feed_entry_contentType">
<xsd:attribute name="src" type="xsd:anyURI"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_SpreadsheetsList_document_feed_entry_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:anyURI"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_SpreadsheetsList_document_feed_entry_authorType">
<xsd:sequence>
<xsd:element minOccurs="0" name="name" type="xsd:string"/>
<xsd:element minOccurs="0" name="email" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_SpreadsheetsList_document_feed_entryType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_SpreadsheetsList_document_feed_entry_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element minOccurs="0" name="content" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_SpreadsheetsList_document_feed_entry_contentType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_SpreadsheetsList_document_feed_entry_linkType"/>
<xsd:element minOccurs="0" name="author" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_SpreadsheetsList_document_feed_entry_authorType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_SpreadsheetsList_document_feedType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_SpreadsheetsList_document_feed_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_SpreadsheetsList_document_feed_linkType"/>
<xsd:element minOccurs="0" name="totalResults" type="xsd:byte"/>
<xsd:element minOccurs="0" name="startIndex" type="xsd:byte"/>
<xsd:element minOccurs="0" name="entry" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_SpreadsheetsList_document_feed_entryType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__SpreadsheetsListResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="feed" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_SpreadsheetsList_document_feedType"/>
<xsd:element minOccurs="0" name="expiryError" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__WorksheetsList" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__WorksheetsListRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[A given spreadsheet may contain multiple worksheets. For each spreadsheet, there's a worksheets metafeed listing all the worksheets in that spreadsheet.



This transaction retrieves a list of worksheets in a given spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__WorksheetsListResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__WorksheetsListResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__WorksheetsListRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[A given spreadsheet may contain multiple worksheets. For each spreadsheet, there's a worksheets metafeed listing all the worksheets in that spreadsheet.



This transaction retrieves a list of worksheets in a given spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheet metafeed, the URI given in the <link> element with rel="alternate" contains the key parameter which is the spreadsheet ID.

Note that the key value that appears here is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

</entry>



To easily get the spreadsheet key from the spreadsheet metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_WorksheetsList_document_feed_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_WorksheetsList_document_feed_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_WorksheetsList_document_feed_authorType">
<xsd:sequence>
<xsd:element minOccurs="0" name="name" type="xsd:string"/>
<xsd:element minOccurs="0" name="email" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_WorksheetsList_document_feed_entry_editedType"/>
<xsd:complexType name="SpreadsheetConnector_WorksheetsList_document_feed_entry_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_WorksheetsList_document_feed_entry_contentType">
<xsd:attribute name="src" type="xsd:anyURI"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_WorksheetsList_document_feed_entry_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:anyURI"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_WorksheetsList_document_feed_entryType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="edited" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetsList_document_feed_entry_editedType"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetsList_document_feed_entry_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element minOccurs="0" name="content" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetsList_document_feed_entry_contentType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetsList_document_feed_entry_linkType"/>
<xsd:element minOccurs="0" name="rowCount" type="xsd:byte"/>
<xsd:element minOccurs="0" name="colCount" type="xsd:byte"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_WorksheetsList_document_feedType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetsList_document_feed_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetsList_document_feed_linkType"/>
<xsd:element minOccurs="0" name="author" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetsList_document_feed_authorType"/>
<xsd:element minOccurs="0" name="totalResults" type="xsd:byte"/>
<xsd:element minOccurs="0" name="startIndex" type="xsd:byte"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="entry" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetsList_document_feed_entryType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__WorksheetsListResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="feed" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetsList_document_feedType"/>
<xsd:element minOccurs="0" name="expiryError" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__WorksheetDelete" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__WorksheetDeleteRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Deletes a worksheet from a given spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__WorksheetDeleteResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__WorksheetDeleteResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__WorksheetDeleteRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Deletes a worksheet from a given spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="worksheetID" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Worksheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the sheet parameter which is the worksheet ID.



Example :



        <entry gd:etag="&quot;U1RIVxJBSSt7ImBvA1c.&quot;">

            <id>http://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6</id>

            <updated>2010-05-20T12:49:59.492Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-05-20T12:49:59.492Z</app:edited>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#worksheet"/>

            <title>Sheet1</title>

            <content src="http://spreadsheets.google.com/feeds/list/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/cells/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" rel="http://schemas.google.com/spreadsheets/2006#cellsfeed" type="application/atom+xml"/>



            <link href="http://spreadsheets.google.com/tq?key=0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE&amp;sheet=od6" rel="http://schemas.google.com/visualization/2008#visualizationApi" type="application/atom+xml"/>



            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="edit" type="application/atom+xml"/>

            <gs:rowCount>100</gs:rowCount>

            <gs:colCount>20</gs:colCount>

        </entry>



To easily get the worksheet ID from the worksheet metafeed, you can use the "HelperGetWorksheetId" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="etag" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Resource version (ETag)</xsd:appinfo>
<xsd:documentation><![CDATA[If you want to make sure that you don't delete a worksheet that has been changed by another client since you retrieved it, specify the original worksheet's ETag value in this variable. You can determine the original worksheet's ETag value by examining the <entry>  element's "gd:etag" attribute.



Example :



	<entry gd:etag="&quot;DxgVTk5cGit7ImBvAk4.&quot;">

            <id>http://spreadsheets.google.com/feeds/worksheets/td0ZjT6ZK_6JTa8m4CARnFg/od7</id>

            <updated>2010-06-14T12:54:55.037Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-14T12:54:55.037Z</app:edited>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#worksheet"/>

            <title>Feuille2</title>

            <content src="http://spreadsheets.google.com/feeds/list/td0ZjT6ZK_6JTa8m4CARnFg/od7/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/cells/td0ZjT6ZK_6JTa8m4CARnFg/od7/private/full" rel="http://schemas.google.com/spreadsheets/2006#cellsfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/tq?key=td0ZjT6ZK_6JTa8m4CARnFg&amp;sheet=od7" rel="http://schemas.google.com/visualization/2008#visualizationApi" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/worksheets/td0ZjT6ZK_6JTa8m4CARnFg/private/full/od7" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/worksheets/td0ZjT6ZK_6JTa8m4CARnFg/private/full/od7" rel="edit" type="application/atom+xml"/>

            <gs:rowCount>20</gs:rowCount>

            <gs:colCount>6</gs:colCount>

        </entry>



If you want to delete the worksheet regardless of whether someone else has updated it since you retrieved it, then use '*' value in this variable (default value). 





== More information about ETags ==



Sometimes you need to be able to refer to a specific version of a particular entry.



This is important in two cases in particular:



    * Doing a "conditional retrieval," in which your client requests an entry, and the server sends the entry only if it has changed since the last time the client requested it.

    * Ensuring that multiple clients don't inadvertently overwrite one another's changes. The Data APIs do this by making updates and deletes fail if the client specifies an old version identifier for the entry.



The Google Data APIs handle both of these cases using ETags, a standard part of HTTP.



An ETag is an identifier that specifies a particular version of a particular entry. The server attaches an ETag to entry and feed elements that it sends to clients. When an entry or feed changes, its ETag changes as well.



The Google Data APIs provide ETags in two places: in an ETag HTTP header, and in a gd:etag attribute of <feed> and <entry> elements.



In the Google Data APIs, an ETag is usually a string of letters and numbers, sometimes also including hyphens and periods; the string is usually enclosed in quotation marks. (The quotation marks are part of the ETag.) For example, here's an ETag from a Data API entry: "S0wCTlpIIip7ImA0X0QI".



There are two kinds of ETags: strong and weak. Strong ETags identify a specific version of a specific entry, and can be used to avoid overwriting other clients' changes. Weak ETags, in the context of the Google Data APIs, are used only for conditional retrieval. A weak ETag always starts with W/. For example: W/"D08FQn8-eil7ImA9WxZbFEw."



Not all Google Data APIs support strong ETags. For those that do, the strong ETags are used only for entries; ETags on feeds are always weak.



Here's an example of a feed (including some of the HTTP headers) retrieved from a service that supports strong ETags:



GData-Version: 2.0

ETag: W/"C0QBRXcycSp7ImA9WxRVFUk."

...

<?xml version='1.0' encoding='utf-8'?>

<feed xmlns='http://www.w3.org/2005/Atom'

    xmlns:gd='http://schemas.google.com/g/2005'

    gd:etag='W/"C0QBRXcycSp7ImA9WxRVFUk."'>

  ...

  <entry gd:etag='"CUUEQX47eCp7ImA9WxRVEkQ."'>

    ...

  </entry>

</feed>



The client libraries that support version 2 of the Data APIs handle ETags for you, transparently. The following information is for clients that don't use client libraries, and for readers interested in how versioning is handled at the protocol level.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheet metafeed, the URI given in the <link> element with rel="alternate" contains the key parameter which is the spreadsheet ID.

Note that the key value that appears here is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

</entry>



In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the key parameter too.



To easily get the spreadsheet key from the spreadsheet metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__WorksheetDeleteResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="expiryError" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_WorksheetAdd_document_entry_editedType"/>
<xsd:complexType name="SpreadsheetConnector_WorksheetAdd_document_entry_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_WorksheetAdd_document_entry_contentType">
<xsd:attribute name="src" type="xsd:anyURI"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_WorksheetAdd_document_entry_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:anyURI"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_WorksheetAdd_document_entryType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="edited" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetAdd_document_entry_editedType"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetAdd_document_entry_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element minOccurs="0" name="content" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetAdd_document_entry_contentType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetAdd_document_entry_linkType"/>
<xsd:element minOccurs="0" name="rowCount" type="xsd:byte"/>
<xsd:element minOccurs="0" name="colCount" type="xsd:byte"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__WorksheetAddResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="entry" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_WorksheetAdd_document_entryType"/>
<xsd:element minOccurs="0" name="expiryError" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_authorType">
<xsd:sequence>
<xsd:element minOccurs="0" name="name" type="xsd:string"/>
<xsd:element minOccurs="0" name="email" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_entry_editedType"/>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_entry_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_entry_contentType">
<xsd:attribute name="src" type="xsd:anyURI"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_entry_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_entry_worksheetType">
<xsd:attribute name="name" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_entry_headerType">
<xsd:attribute name="row" type="xsd:byte"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_entry_optionsType">
<xsd:attribute name="allCols" type="xsd:boolean"/>
<xsd:attribute name="allRows" type="xsd:boolean"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_entry_data_columnType">
<xsd:attribute name="index" type="xsd:string"/>
<xsd:attribute name="name" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_entry_dataType">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="column" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_entry_data_columnType"/>
</xsd:sequence>
<xsd:attribute name="insertionMode" type="xsd:string"/>
<xsd:attribute name="numRows" type="xsd:byte"/>
<xsd:attribute name="startRow" type="xsd:byte"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feed_entryType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="edited" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_entry_editedType"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_entry_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element minOccurs="0" name="summary" type="xsd:string"/>
<xsd:element minOccurs="0" name="content" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_entry_contentType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_entry_linkType"/>
<xsd:element minOccurs="0" name="worksheet" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_entry_worksheetType"/>
<xsd:element minOccurs="0" name="header" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_entry_headerType"/>
<xsd:element minOccurs="0" name="options" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_entry_optionsType"/>
<xsd:element minOccurs="0" name="data" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_entry_dataType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TablesList_document_feedType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_linkType"/>
<xsd:element minOccurs="0" name="author" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_authorType"/>
<xsd:element minOccurs="0" name="totalResults" type="xsd:byte"/>
<xsd:element minOccurs="0" name="startIndex" type="xsd:byte"/>
<xsd:element minOccurs="0" name="entry" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feed_entryType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__TablesListResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="feed" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TablesList_document_feedType"/>
<xsd:element minOccurs="0" name="expiryError" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__TableDelete" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__TableDeleteRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Deletes a table from a given spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__TableDeleteResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__TableDeleteResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__TableDeleteRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Deletes a table from a given spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="etag" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Resource version (ETag)</xsd:appinfo>
<xsd:documentation><![CDATA[If you want to make sure that you don't delete a table that has been changed by another client since you retrieved it, specify the original table's ETag value in this variable. You can determine the original table's ETag value by examining the <entry>  element's "gd:etag" attribute.



Example :



	<entry gd:etag="&quot;CERXVEQNByt7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0</id>

            <updated>2010-06-11T14:47:40.261Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-11T14:47:40.261Z</app:edited>

            <category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/spreadsheets/2006#table"/>

            <title>Table2</title>

            <summary>This is a list of all who have registered to vote.</summary>

            <content src="http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0" type="application/atom+xml;type=feed"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="edit" type="application/atom+xml"/>

            <gs:worksheet name="Feuille2"/>

            <gs:header row="1"/>

            <gs:options allCols="false" allRows="false"/>

            <gs:data insertionMode="overwrite" numRows="6" startRow="5">

                <gs:column index="D" name="fourth column"/>

                <gs:column index="C" name="third column"/>

                <gs:column index="A" name="first column"/>

            </gs:data>

        </entry>



If you want to delete the table regardless of whether someone else has updated it since you retrieved it, then use '*' value in this variable (default value).







== More information about ETags ==



Sometimes you need to be able to refer to a specific version of a particular entry.



This is important in two cases in particular:



    * Doing a "conditional retrieval," in which your client requests an entry, and the server sends the entry only if it has changed since the last time the client requested it.

    * Ensuring that multiple clients don't inadvertently overwrite one another's changes. The Data APIs do this by making updates and deletes fail if the client specifies an old version identifier for the entry.



The Google Data APIs handle both of these cases using ETags, a standard part of HTTP.



An ETag is an identifier that specifies a particular version of a particular entry. The server attaches an ETag to entry and feed elements that it sends to clients. When an entry or feed changes, its ETag changes as well.



The Google Data APIs provide ETags in two places: in an ETag HTTP header, and in a gd:etag attribute of <feed> and <entry> elements.



In the Google Data APIs, an ETag is usually a string of letters and numbers, sometimes also including hyphens and periods; the string is usually enclosed in quotation marks. (The quotation marks are part of the ETag.) For example, here's an ETag from a Data API entry: "S0wCTlpIIip7ImA0X0QI".



There are two kinds of ETags: strong and weak. Strong ETags identify a specific version of a specific entry, and can be used to avoid overwriting other clients' changes. Weak ETags, in the context of the Google Data APIs, are used only for conditional retrieval. A weak ETag always starts with W/. For example: W/"D08FQn8-eil7ImA9WxZbFEw."



Not all Google Data APIs support strong ETags. For those that do, the strong ETags are used only for entries; ETags on feeds are always weak.



Here's an example of a feed (including some of the HTTP headers) retrieved from a service that supports strong ETags:



GData-Version: 2.0

ETag: W/"C0QBRXcycSp7ImA9WxRVFUk."

...

<?xml version='1.0' encoding='utf-8'?>

<feed xmlns='http://www.w3.org/2005/Atom'

    xmlns:gd='http://schemas.google.com/g/2005'

    gd:etag='W/"C0QBRXcycSp7ImA9WxRVFUk."'>

  ...

  <entry gd:etag='"CUUEQX47eCp7ImA9WxRVEkQ."'>

    ...

  </entry>

</feed>



The client libraries that support version 2 of the Data APIs handle ETags for you, transparently. The following information is for clients that don't use client libraries, and for readers interested in how versioning is handled at the protocol level.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheet metafeed, the URI given in the <link> element with rel="alternate" contains the key parameter which is the spreadsheet ID.

Note that the key value that appears here is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the key parameter too.



To easily get the spreadsheet key from the spreadsheet metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="tableNumber" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Table number</xsd:appinfo>
<xsd:documentation><![CDATA[In the table metafeed, the URI given in the <link> element with rel="edit" contains the data which is the table number, after the substring "/tables/".



Example :



       <entry gd:etag="&quot;CERXVEQNByt7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0</id>

            <updated>2010-06-11T14:47:40.261Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-11T14:47:40.261Z</app:edited>

            <category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/spreadsheets/2006#table"/>

            <title>Table2</title>

            <summary>This is a list of all who have registered to vote.</summary>

            <content src="http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0" type="application/atom+xml;type=feed"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="edit" type="application/atom+xml"/>

            <gs:worksheet name="Feuille2"/>

            <gs:header row="1"/>

            <gs:options allCols="false" allRows="false"/>

            <gs:data insertionMode="overwrite" numRows="4" startRow="5">

                <gs:column index="D" name="fourth column"/>

                <gs:column index="C" name="third column"/>

                <gs:column index="A" name="first column"/>

            </gs:data>

        </entry>



To easily get the table number from the table metafeed, you can use the "HelperGetTableNumber" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__TableDeleteResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="expiryError" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__TableAdd" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__TableAddRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Adds a table on a specified worksheet.



You can specify the header row, the start row for the data, the number of rows, and the columns (and order of columns) to use. Thus, the table can consist of a header row, any number of data rows that are adjacent in the worksheet, and any set of columns, in any order
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__TableAddResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__TableAddResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__TableAddRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Adds a table on a specified worksheet.



You can specify the header row, the start row for the data, the number of rows, and the columns (and order of columns) to use. Thus, the table can consist of a header row, any number of data rows that are adjacent in the worksheet, and any set of columns, in any order
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="index">
<xsd:annotation>
<xsd:appinfo>Columns indexes</xsd:appinfo>
<xsd:documentation><![CDATA[Indexes of the table's columns.
]]></xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="item" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="startRow" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Data start row</xsd:appinfo>
<xsd:documentation><![CDATA[Starting row number for the table's data in the worksheet.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="headerRow" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Header row number</xsd:appinfo>
<xsd:documentation><![CDATA[Row number for the header row.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheet metafeed, the URI given in the <link> element with rel="alternate" contains the key parameter which is the spreadsheet ID.

Note that the key value that appears here is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the key parameter too.



To easily get the spreadsheet key from the spreadsheet metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="summary" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>New table summary</xsd:appinfo>
<xsd:documentation><![CDATA[Summary of the new table.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="numRows" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Number of rows</xsd:appinfo>
<xsd:documentation><![CDATA[Table's number of rows.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="columnName">
<xsd:annotation>
<xsd:appinfo>Columns names</xsd:appinfo>
<xsd:documentation><![CDATA[Names of the table's columns.
]]></xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="item" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="title" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>New table title</xsd:appinfo>
<xsd:documentation><![CDATA[Title of the new table to create.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="worksheetName" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Worksheet name to create the new table</xsd:appinfo>
<xsd:documentation><![CDATA[Name of the worksheet in wich you want to create the new table.



In the worksheet metafeed, the <title> element contains the string which is the worksheet name.



Example :



        <entry gd:etag="&quot;U1RIVxJBSSt7ImBvA1c.&quot;">

            <id>http://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6</id>

            <updated>2010-05-20T12:49:59.492Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-05-20T12:49:59.492Z</app:edited>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#worksheet"/>

            <title>Sheet1</title>

            <content src="http://spreadsheets.google.com/feeds/list/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/cells/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" rel="http://schemas.google.com/spreadsheets/2006#cellsfeed" type="application/atom+xml"/>



            <link href="http://spreadsheets.google.com/tq?key=0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE&amp;sheet=od6" rel="http://schemas.google.com/visualization/2008#visualizationApi" type="application/atom+xml"/>



            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="edit" type="application/atom+xml"/>

            <gs:rowCount>100</gs:rowCount>

            <gs:colCount>20</gs:colCount>

        </entry>
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TableAdd_document_entry_editedType"/>
<xsd:complexType name="SpreadsheetConnector_TableAdd_document_entry_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TableAdd_document_entry_contentType">
<xsd:attribute name="src" type="xsd:anyURI"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TableAdd_document_entry_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TableAdd_document_entry_worksheetType">
<xsd:attribute name="name" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TableAdd_document_entry_headerType">
<xsd:attribute name="row" type="xsd:byte"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TableAdd_document_entry_optionsType">
<xsd:attribute name="allCols" type="xsd:boolean"/>
<xsd:attribute name="allRows" type="xsd:boolean"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TableAdd_document_entry_data_columnType">
<xsd:attribute name="index" type="xsd:string"/>
<xsd:attribute name="name" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TableAdd_document_entry_dataType">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="column" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TableAdd_document_entry_data_columnType"/>
</xsd:sequence>
<xsd:attribute name="insertionMode" type="xsd:string"/>
<xsd:attribute name="numRows" type="xsd:byte"/>
<xsd:attribute name="startRow" type="xsd:byte"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_TableAdd_document_entryType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="edited" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TableAdd_document_entry_editedType"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TableAdd_document_entry_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element minOccurs="0" name="summary" type="xsd:string"/>
<xsd:element minOccurs="0" name="content" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TableAdd_document_entry_contentType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TableAdd_document_entry_linkType"/>
<xsd:element minOccurs="0" name="worksheet" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TableAdd_document_entry_worksheetType"/>
<xsd:element minOccurs="0" name="header" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TableAdd_document_entry_headerType"/>
<xsd:element minOccurs="0" name="options" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TableAdd_document_entry_optionsType"/>
<xsd:element minOccurs="0" name="data" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TableAdd_document_entry_dataType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__TableAddResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="entry" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_TableAdd_document_entryType"/>
<xsd:element minOccurs="0" name="expiryError" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_entry_editedType"/>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_entry_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_entry_contentType">
<xsd:attribute name="src" type="xsd:anyURI"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_entry_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_entry_worksheetType">
<xsd:attribute name="name" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_entry_headerType">
<xsd:attribute name="row" type="xsd:byte"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_entry_optionsType">
<xsd:attribute name="allCols" type="xsd:boolean"/>
<xsd:attribute name="allRows" type="xsd:boolean"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_entry_data_columnType">
<xsd:attribute name="index" type="xsd:string"/>
<xsd:attribute name="name" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_entry_dataType">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="column" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_entry_data_columnType"/>
</xsd:sequence>
<xsd:attribute name="insertionMode" type="xsd:string"/>
<xsd:attribute name="numRows" type="xsd:byte"/>
<xsd:attribute name="startRow" type="xsd:byte"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_entryType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="edited" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_entry_editedType"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_entry_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element minOccurs="0" name="summary" type="xsd:string"/>
<xsd:element minOccurs="0" name="content" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_entry_contentType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_entry_linkType"/>
<xsd:element minOccurs="0" name="worksheet" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_entry_worksheetType"/>
<xsd:element minOccurs="0" name="header" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_entry_headerType"/>
<xsd:element minOccurs="0" name="options" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_entry_optionsType"/>
<xsd:element minOccurs="0" name="data" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_entry_dataType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__RecordAdd" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__RecordAddRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Adds a new record into a specified table of a specified spreadsheet.



You can specify the record's title, and the columns names and matching values to insert.



When you insert a new record, Spreadsheets adds the new data to a row in the worksheet, then adds a new record to the table using the newly added data.



The choice of which worksheet row to put the data in is determined by the table's mode:



    * If the table is set to use insert mode, then Spreadsheets adds a new row to the worksheet, and puts the new data in that new row.

    * If the table is set to use overwrite mode, then Spreadsheets uses the next unused row from the worksheet. If there are no unused rows in the worksheet, then Spreadsheets adds a new row to the worksheet, as if the table were set to use insert mode.


]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__RecordAddResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__RecordAddResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__RecordAddRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Adds a new record into a specified table of a specified spreadsheet.



You can specify the record's title, and the columns names and matching values to insert.



When you insert a new record, Spreadsheets adds the new data to a row in the worksheet, then adds a new record to the table using the newly added data.



The choice of which worksheet row to put the data in is determined by the table's mode:



    * If the table is set to use insert mode, then Spreadsheets adds a new row to the worksheet, and puts the new data in that new row.

    * If the table is set to use overwrite mode, then Spreadsheets uses the next unused row from the worksheet. If there are no unused rows in the worksheet, then Spreadsheets adds a new row to the worksheet, as if the table were set to use insert mode.


]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheet metafeed, the URI given in the <link> element with rel="alternate" contains the key parameter which is the spreadsheet ID.

Note that the key value that appears here is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the key parameter too.



To easily get the spreadsheet key from the spreadsheet metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="tableNumber" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Table number</xsd:appinfo>
<xsd:documentation><![CDATA[In the table metafeed, the URI given in the <link> element with rel="edit" contains the data which is the table number, after the substring "/tables/".



Example :



       <entry gd:etag="&quot;CERXVEQNByt7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0</id>

            <updated>2010-06-11T14:47:40.261Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-11T14:47:40.261Z</app:edited>

            <category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/spreadsheets/2006#table"/>

            <title>Table2</title>

            <summary>This is a list of all who have registered to vote.</summary>

            <content src="http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0" type="application/atom+xml;type=feed"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="edit" type="application/atom+xml"/>

            <gs:worksheet name="Feuille2"/>

            <gs:header row="1"/>

            <gs:options allCols="false" allRows="false"/>

            <gs:data insertionMode="overwrite" numRows="4" startRow="5">

                <gs:column index="D" name="fourth column"/>

                <gs:column index="C" name="third column"/>

                <gs:column index="A" name="first column"/>

            </gs:data>

        </entry>



To easily get the table number from the table metafeed, you can use the "HelperGetTableNumber" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="columnName">
<xsd:annotation>
<xsd:appinfo>Columns names</xsd:appinfo>
<xsd:documentation><![CDATA[Names of the record's columns.
]]></xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="item" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="title" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>New record title</xsd:appinfo>
<xsd:documentation><![CDATA[Title of the new record to add.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="columnValue">
<xsd:annotation>
<xsd:appinfo>Columns values</xsd:appinfo>
<xsd:documentation><![CDATA[Values of the record's columns.
]]></xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="item" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordAdd_document_entry_editedType"/>
<xsd:complexType name="SpreadsheetConnector_RecordAdd_document_entry_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordAdd_document_entry_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordAdd_document_entry_fieldType">
<xsd:attribute name="index" type="xsd:string"/>
<xsd:attribute name="name" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordAdd_document_entryType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="edited" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordAdd_document_entry_editedType"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordAdd_document_entry_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:byte"/>
<xsd:element minOccurs="0" name="content" type="xsd:string"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordAdd_document_entry_linkType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="field" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordAdd_document_entry_fieldType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__RecordAddResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="entry" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordAdd_document_entryType"/>
<xsd:element minOccurs="0" name="expiryError" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__RecordDelete" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__RecordDeleteRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Deletes a record from a specified table of a given spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__RecordDeleteResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__RecordDeleteResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__RecordDeleteRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Deletes a record from a specified table of a given spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="recordID" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Record ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the record metafeed, the URI given in the <link> element with rel="edit" contains the data which is the recordID, after the substring "/records/tableNumber/".



Example :



	<entry gd:etag="&quot;EFQWVhUmbCt7ImA_WhMASA..&quot;">

            <id>http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0/ciyn3</id>

            <updated>2010-06-14T13:14:08.539Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-14T13:14:08.539Z</app:edited>

            <category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/spreadsheets/2006#record"/>

            <title>alexandre</title>

            <content>fourth column: logan, third column: nathan, first column: alexandre</content>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0/ciyn3" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0/ciyn3" rel="edit" type="application/atom+xml"/>

            <gs:field index="B" name="fourth column">logan</gs:field>

            <gs:field index="A" name="third column">nathan</gs:field>

            <gs:field index="A" name="first column">alexandre</gs:field>

        </entry>



To easily get the record ID from the record metafeed, you can use the "HelperGetRecordId" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="etag" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Resource version (ETag)</xsd:appinfo>
<xsd:documentation><![CDATA[If you want to make sure that you don't delete a record that has been changed by another client since you retrieved it, specify the original record's ETag value in this variable. You can determine the original record's ETag value by examining the <entry>  element's "gd:etag" attribute.



Example :



	<entry gd:etag="&quot;EFQWVhUmbCt7ImA_WhMASA..&quot;">

            <id>http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0/ciyn3</id>

            <updated>2010-06-14T13:14:08.539Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-14T13:14:08.539Z</app:edited>

            <category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/spreadsheets/2006#record"/>

            <title>alexandre</title>

            <content>fourth column: logan, third column: nathan, first column: alexandre</content>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0/ciyn3" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0/ciyn3" rel="edit" type="application/atom+xml"/>

            <gs:field index="B" name="fourth column">logan</gs:field>

            <gs:field index="A" name="third column">nathan</gs:field>

            <gs:field index="A" name="first column">alexandre</gs:field>

        </entry>



If you want to delete the record regardless of whether someone else has updated it since you retrieved it, then use '*' in this variable (default value). 







== More information about ETags ==



Sometimes you need to be able to refer to a specific version of a particular entry.



This is important in two cases in particular:



    * Doing a "conditional retrieval," in which your client requests an entry, and the server sends the entry only if it has changed since the last time the client requested it.

    * Ensuring that multiple clients don't inadvertently overwrite one another's changes. The Data APIs do this by making updates and deletes fail if the client specifies an old version identifier for the entry.



The Google Data APIs handle both of these cases using ETags, a standard part of HTTP.



An ETag is an identifier that specifies a particular version of a particular entry. The server attaches an ETag to entry and feed elements that it sends to clients. When an entry or feed changes, its ETag changes as well.



The Google Data APIs provide ETags in two places: in an ETag HTTP header, and in a gd:etag attribute of <feed> and <entry> elements.



In the Google Data APIs, an ETag is usually a string of letters and numbers, sometimes also including hyphens and periods; the string is usually enclosed in quotation marks. (The quotation marks are part of the ETag.) For example, here's an ETag from a Data API entry: "S0wCTlpIIip7ImA0X0QI".



There are two kinds of ETags: strong and weak. Strong ETags identify a specific version of a specific entry, and can be used to avoid overwriting other clients' changes. Weak ETags, in the context of the Google Data APIs, are used only for conditional retrieval. A weak ETag always starts with W/. For example: W/"D08FQn8-eil7ImA9WxZbFEw."



Not all Google Data APIs support strong ETags. For those that do, the strong ETags are used only for entries; ETags on feeds are always weak.



Here's an example of a feed (including some of the HTTP headers) retrieved from a service that supports strong ETags:



GData-Version: 2.0

ETag: W/"C0QBRXcycSp7ImA9WxRVFUk."

...

<?xml version='1.0' encoding='utf-8'?>

<feed xmlns='http://www.w3.org/2005/Atom'

    xmlns:gd='http://schemas.google.com/g/2005'

    gd:etag='W/"C0QBRXcycSp7ImA9WxRVFUk."'>

  ...

  <entry gd:etag='"CUUEQX47eCp7ImA9WxRVEkQ."'>

    ...

  </entry>

</feed>



The client libraries that support version 2 of the Data APIs handle ETags for you, transparently. The following information is for clients that don't use client libraries, and for readers interested in how versioning is handled at the protocol level.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheet metafeed, the URI given in the <link> element with rel="alternate" contains the key parameter which is the spreadsheet ID.

Note that the key value that appears here is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the key parameter too.



To easily get the spreadsheet key from the spreadsheet metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="tableNumber" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Table number</xsd:appinfo>
<xsd:documentation><![CDATA[In the table metafeed, the URI given in the <link> element with rel="edit" contains the data which is the table number, after the substring "/tables/".



Example :



       <entry gd:etag="&quot;CERXVEQNByt7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0</id>

            <updated>2010-06-11T14:47:40.261Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-11T14:47:40.261Z</app:edited>

            <category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/spreadsheets/2006#table"/>

            <title>Table2</title>

            <summary>This is a list of all who have registered to vote.</summary>

            <content src="http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0" type="application/atom+xml;type=feed"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="edit" type="application/atom+xml"/>

            <gs:worksheet name="Feuille2"/>

            <gs:header row="1"/>

            <gs:options allCols="false" allRows="false"/>

            <gs:data insertionMode="overwrite" numRows="4" startRow="5">

                <gs:column index="D" name="fourth column"/>

                <gs:column index="C" name="third column"/>

                <gs:column index="A" name="first column"/>

            </gs:data>

        </entry>



To easily get the table number from the table metafeed, you can use the "HelperGetTableNumber" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__RecordDeleteResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="expiryError" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__ListRowsList" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__ListRowsListRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[<![CDATA[A given worksheet generally contains multiple rows, each containing multiple cells. You can request data from the worksheet as a list-based feed, in which each entry represents a row.



The list feed makes some assumptions about how the data is laid out in the spreadsheet. In particular, the list feed treats the first row of the worksheet as a header row; Spreadsheets dynamically creates XML elements named after the contents of header-row cells. Users who want to provide Data API feeds should not put any data other than column headers in the first row of a worksheet.



The list feed contains all rows after the first row up to the first blank row. The first blank row terminates the data set. If expected data isn't appearing in a feed, check the worksheet manually to see whether there's an unexpected blank row in the middle of the data. In particular, if the second row of the spreadsheet is blank, then the list feed will contain no data.



A row in a list feed is as many columns wide as the worksheet itself.



This transaction retrieves a list-based feed with all the tables from the specified worksheet of the specified spreadsheet.



Each entry represents a row in the worksheet. The <title> element contains the contents of the first cell in the row, and the <content> element contains a textual representation of the data from all the other cells in the row.

Each item in the gsx namespace represents the contents of a cell in the row, with elements in the gsx namespace named after the contents of the header cells]]]]><![CDATA[>&#8212;<![CDATA[that is, the cells in the first row of the worksheet. If a particular header cell is empty, then a unique column ID is used for the gsx element name. If the header cell's content contains a space, it will be removed in the gsx element name.

]]]]><![CDATA[>
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__ListRowsListResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__ListRowsListResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__ListRowsListRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[<![CDATA[A given worksheet generally contains multiple rows, each containing multiple cells. You can request data from the worksheet as a list-based feed, in which each entry represents a row.



The list feed makes some assumptions about how the data is laid out in the spreadsheet. In particular, the list feed treats the first row of the worksheet as a header row; Spreadsheets dynamically creates XML elements named after the contents of header-row cells. Users who want to provide Data API feeds should not put any data other than column headers in the first row of a worksheet.



The list feed contains all rows after the first row up to the first blank row. The first blank row terminates the data set. If expected data isn't appearing in a feed, check the worksheet manually to see whether there's an unexpected blank row in the middle of the data. In particular, if the second row of the spreadsheet is blank, then the list feed will contain no data.



A row in a list feed is as many columns wide as the worksheet itself.



This transaction retrieves a list-based feed with all the tables from the specified worksheet of the specified spreadsheet.



Each entry represents a row in the worksheet. The <title> element contains the contents of the first cell in the row, and the <content> element contains a textual representation of the data from all the other cells in the row.

Each item in the gsx namespace represents the contents of a cell in the row, with elements in the gsx namespace named after the contents of the header cells]]]]><![CDATA[>&#8212;<![CDATA[that is, the cells in the first row of the worksheet. If a particular header cell is empty, then a unique column ID is used for the gsx element name. If the header cell's content contains a space, it will be removed in the gsx element name.

]]]]><![CDATA[>
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="reverseSort" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Reverse sorting mode</xsd:appinfo>
<xsd:documentation><![CDATA[By default, records in the feed appear in the same order as the corresponding rows in the GUI; that is, they're in order by row number. 



To get records in reverse order, set the following parameter to 'true'.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="worksheetId" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Worksheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the sheet parameter which is the worksheet ID.



Example :



        <entry gd:etag="&quot;U1RIVxJBSSt7ImBvA1c.&quot;">

            <id>http://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6</id>

            <updated>2010-05-20T12:49:59.492Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-05-20T12:49:59.492Z</app:edited>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#worksheet"/>

            <title>Sheet1</title>

            <content src="http://spreadsheets.google.com/feeds/list/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/cells/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" rel="http://schemas.google.com/spreadsheets/2006#cellsfeed" type="application/atom+xml"/>



            <link href="http://spreadsheets.google.com/tq?key=0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE&amp;sheet=od6" rel="http://schemas.google.com/visualization/2008#visualizationApi" type="application/atom+xml"/>



            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="edit" type="application/atom+xml"/>

            <gs:rowCount>100</gs:rowCount>

            <gs:colCount>20</gs:colCount>

        </entry>



To easily get the worksheet ID from the worksheet metafeed, you can use the "HelperGetWorksheetId" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheet metafeed, the URI given in the <link> element with rel="alternate" contains the key parameter which is the spreadsheet ID.

Note that the key value that appears here is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>



            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>



            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the key parameter too.



To easily get the spreadsheet key from the spreadsheet metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_ListRowsList_document_feed_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_ListRowsList_document_feed_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_ListRowsList_document_feed_authorType">
<xsd:sequence>
<xsd:element minOccurs="0" name="name" type="xsd:string"/>
<xsd:element minOccurs="0" name="email" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_ListRowsList_document_feed_entry_editedType"/>
<xsd:complexType name="SpreadsheetConnector_ListRowsList_document_feed_entry_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_ListRowsList_document_feed_entry_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_ListRowsList_document_feed_entryType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="edited" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_ListRowsList_document_feed_entry_editedType"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_ListRowsList_document_feed_entry_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element minOccurs="0" name="content" type="xsd:string"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_ListRowsList_document_feed_entry_linkType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_ListRowsList_document_feedType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_ListRowsList_document_feed_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_ListRowsList_document_feed_linkType"/>
<xsd:element minOccurs="0" name="author" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_ListRowsList_document_feed_authorType"/>
<xsd:element minOccurs="0" name="totalResults" type="xsd:byte"/>
<xsd:element minOccurs="0" name="startIndex" type="xsd:byte"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="entry" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_ListRowsList_document_feed_entryType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__ListRowsListResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="feed" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_ListRowsList_document_feedType"/>
<xsd:element minOccurs="0" name="expiryError" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__ListRowDelete" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__ListRowDeleteRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Deletes a list row from a specified table of a given spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__ListRowDeleteResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__ListRowDeleteResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__ListRowDeleteRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Deletes a list row from a specified table of a given spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="rowID" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Row ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the list row metafeed, the URI given in the <link> element with rel="edit" contains the data which is the rowID, after the substring "/list/key/worksheetID/private/full/".



Example :



	<entry gd:etag="&quot;EwIYUUZ5ZSt7ImBqDhVXTg..&quot;">

            <id>http://spreadsheets.google.com/feeds/list/td0ZjT6ZK_6JTa8m4CARnFg/od6/ciyn3</id>

            <updated>2010-06-16T14:13:46.150Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-16T14:13:46.150Z</app:edited>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#list"/>

            <title>search</title>

            <content>title2: maps, title3: API</content>

            <link href="https://spreadsheets.google.com/feeds/list/td0ZjT6ZK_6JTa8m4CARnFg/od6/private/full/ciyn3" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/list/td0ZjT6ZK_6JTa8m4CARnFg/od6/private/full/ciyn3" rel="edit" type="application/atom+xml"/>

            <gsx:title1>search</gsx:title1>

            <gsx:title2>maps</gsx:title2>

            <gsx:title3>API</gsx:title3>

        </entry>



To easily get the row ID from the list row metafeed, you can use the "HelperGetListRowId" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="worksheetID" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Worksheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the sheet parameter which is the worksheet ID.



Example :



        <entry gd:etag="&quot;U1RIVxJBSSt7ImBvA1c.&quot;">

            <id>http://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6</id>

            <updated>2010-05-20T12:49:59.492Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-05-20T12:49:59.492Z</app:edited>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#worksheet"/>

            <title>Sheet1</title>

            <content src="http://spreadsheets.google.com/feeds/list/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/cells/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" rel="http://schemas.google.com/spreadsheets/2006#cellsfeed" type="application/atom+xml"/>



            <link href="http://spreadsheets.google.com/tq?key=0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE&amp;sheet=od6" rel="http://schemas.google.com/visualization/2008#visualizationApi" type="application/atom+xml"/>



            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="edit" type="application/atom+xml"/>

            <gs:rowCount>100</gs:rowCount>

            <gs:colCount>20</gs:colCount>

        </entry>



To easily get the worksheet ID from the worksheet metafeed, you can use the "HelperGetWorksheetId" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="etag" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Resource version (ETag)</xsd:appinfo>
<xsd:documentation><![CDATA[If you want to make sure that you don't delete a record that has been changed by another client since you retrieved it, specify the original record's ETag value in this variable. You can determine the original record's ETag value by examining the <entry>  element's "gd:etag" attribute.



Example :



	<entry gd:etag="&quot;EFQWVhUmbCt7ImA_WhMASA..&quot;">

            <id>http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0/ciyn3</id>

            <updated>2010-06-14T13:14:08.539Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-14T13:14:08.539Z</app:edited>

            <category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/spreadsheets/2006#record"/>

            <title>alexandre</title>

            <content>fourth column: logan, third column: nathan, first column: alexandre</content>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0/ciyn3" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0/ciyn3" rel="edit" type="application/atom+xml"/>

            <gs:field index="B" name="fourth column">logan</gs:field>

            <gs:field index="A" name="third column">nathan</gs:field>

            <gs:field index="A" name="first column">alexandre</gs:field>

        </entry>



If you want to delete the record regardless of whether someone else has updated it since you retrieved it, then use '*' in this variable (default value). 







== More information about ETags ==



Sometimes you need to be able to refer to a specific version of a particular entry.



This is important in two cases in particular:



    * Doing a "conditional retrieval," in which your client requests an entry, and the server sends the entry only if it has changed since the last time the client requested it.

    * Ensuring that multiple clients don't inadvertently overwrite one another's changes. The Data APIs do this by making updates and deletes fail if the client specifies an old version identifier for the entry.



The Google Data APIs handle both of these cases using ETags, a standard part of HTTP.



An ETag is an identifier that specifies a particular version of a particular entry. The server attaches an ETag to entry and feed elements that it sends to clients. When an entry or feed changes, its ETag changes as well.



The Google Data APIs provide ETags in two places: in an ETag HTTP header, and in a gd:etag attribute of <feed> and <entry> elements.



In the Google Data APIs, an ETag is usually a string of letters and numbers, sometimes also including hyphens and periods; the string is usually enclosed in quotation marks. (The quotation marks are part of the ETag.) For example, here's an ETag from a Data API entry: "S0wCTlpIIip7ImA0X0QI".



There are two kinds of ETags: strong and weak. Strong ETags identify a specific version of a specific entry, and can be used to avoid overwriting other clients' changes. Weak ETags, in the context of the Google Data APIs, are used only for conditional retrieval. A weak ETag always starts with W/. For example: W/"D08FQn8-eil7ImA9WxZbFEw."



Not all Google Data APIs support strong ETags. For those that do, the strong ETags are used only for entries; ETags on feeds are always weak.



Here's an example of a feed (including some of the HTTP headers) retrieved from a service that supports strong ETags:



GData-Version: 2.0

ETag: W/"C0QBRXcycSp7ImA9WxRVFUk."

...

<?xml version='1.0' encoding='utf-8'?>

<feed xmlns='http://www.w3.org/2005/Atom'

    xmlns:gd='http://schemas.google.com/g/2005'

    gd:etag='W/"C0QBRXcycSp7ImA9WxRVFUk."'>

  ...

  <entry gd:etag='"CUUEQX47eCp7ImA9WxRVEkQ."'>

    ...

  </entry>

</feed>



The client libraries that support version 2 of the Data APIs handle ETags for you, transparently. The following information is for clients that don't use client libraries, and for readers interested in how versioning is handled at the protocol level.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheet metafeed, the URI given in the <link> element with rel="alternate" contains the key parameter which is the spreadsheet ID.

Note that the key value that appears here is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the key parameter too.



To easily get the spreadsheet key from the spreadsheet metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__ListRowDeleteResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="expiryError" type="xsd:string"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_ListRowAdd_document_entry_editedType"/>
<xsd:complexType name="SpreadsheetConnector_ListRowAdd_document_entry_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_ListRowAdd_document_entry_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_ListRowAdd_document_entryType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="edited" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_ListRowAdd_document_entry_editedType"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_ListRowAdd_document_entry_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element minOccurs="0" name="content" type="xsd:string"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_ListRowAdd_document_entry_linkType"/>
<xsd:element minOccurs="0" name="number" type="xsd:byte"/>
<xsd:element minOccurs="0" name="value" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__ListRowAddResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="entry" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_ListRowAdd_document_entryType"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__Login" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__LoginRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[<![CDATA[Accesses a user's Google account.



Once the login information has been successfully authenticated, Google returns a token, which your application will reference each time it requests access to the user's account. This token reference will automatically be added by Convertigo for all transactions executed in the same context. 



The token remains valid for a set length of time, which is defined by whichever Google service you're working with.



There are four possible responses to a login request:



    * success

    * failure, with an explanatory error code

    * invalid request, generally resulting from a malformed request

    * failure with a CAPTCHA challenge



A success response contains an authorization token labeled "Auth". This token must be included in all subsequent requests to the Google service for this account, which will be automatically done by Convertigo for every transaction executed in the same context. Authorization tokens should be closely guarded and should not be given to any other application, as they represent access to the user's account. The time limit on the token varies depending on which service issued it.



For example: 



<?xml version="1.0" encoding="ISO-8859-1"?>

<document connector="SpreadsheetConnector" context="..." contextId="..." fromcache="false" generated="Fri Jun 18 10:27:46 CEST 2010" project="lib_GoogleDocs" sequence="" signature="1276849666418" transaction="Login" version="5.0.5">

	<![CDATA[SID=DQAAAHkAAADyn8dvG5TFFMaMRRKTuPP9lm-z20JRq-MTwtjhgykgulbT0gTX39tCyc67oV5BZI7ixNFzF9KzEMcuFtyPHI0PPoBdwPYSj6jkaU597EWwPJ8h9sfth554serMEBXbEH2Fyj1I9hB8hqz5iacmDCen-xsB725nTVqPJ5kIS9buIg

	LSID=DQAAdrygerhcAA5F9fwhUi7Zaj_YgewWD9Ubvd7Z-3Y7ZfEMionrvM7AXises5Yp_5eG2FHrmmHVpuOo01AgxmWCRp2ScsawFWBywK-trw4iw1VylzaFM1ZKdWYttgjxh8ESdJpBokUnRtLPiPidRnQ4liNeC9EBal2xM16Mnvte_aWh-sbaw

	Auth=DQAAAHwAAAA5F9fwhUi7Zaj_YgewWD9Ubvd7Z-3Y7sfhkn<sdgM7AXises5Yp_5eG2FHrmmHVpu2dl5DaYiiGHSWEbMrQddfghfjfgjhKjk2yu61xtDj3Rj3Dpgpf31t-BZzXQOr45thNrxXFBpI8ceYleaAlhh0JGL6ytV2lhbLcyARA

	]]]]]]><![CDATA[><![CDATA[>

</document>





A failure response includes one or more error codes and a URL with the error message that can be displayed for the user. Please note that ClientLogin does not differentiate between a failure due to an incorrect password or one due to an unrecognized user name (for example, if the user has not yet signed up for an account). Your application needs to handle all possible error messages as appropriate.



For example:



<?xml version="1.0" encoding="ISO-8859-1"?>

<document connector="SpreadsheetConnector" context="..." contextId="..." fromcache="false" generated="Fri Jun 18 10:40:33 CEST 2010" project="lib_GoogleDocs" sequence="" signature="1276850433668" transaction="Login" version="5.0.5">

	<![CDATA[Error=BadAuthentication

	]]]]]]><![CDATA[><![CDATA[>

</document>





A failure response with a CAPTCHA challenge means that Google has decided, for whatever reason, that additional security measures should be taken. This response is accompanied by a CAPTCHA image URL and a token representing the specific CAPTCHA challenge.

To handle the challenge, the application must display the CAPTCHA image and solicit an answer from the user. To display the CAPTCHA image, use the value of CaptchaUrl returned with the failure response, prefixing it with the Google Accounts URL: "http://www.google.com/accounts/". Once the user provides an answer, resend the login request by calling again the Login transaction, this time including the CAPTCHA token (loginToken) and the user's answer (captchaString). Google validates the user's answer before authorizing access to the account. ]]]]><![CDATA[>
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__LoginResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__LoginResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__LoginRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[<![CDATA[Accesses a user's Google account.



Once the login information has been successfully authenticated, Google returns a token, which your application will reference each time it requests access to the user's account. This token reference will automatically be added by Convertigo for all transactions executed in the same context. 



The token remains valid for a set length of time, which is defined by whichever Google service you're working with.



There are four possible responses to a login request:



    * success

    * failure, with an explanatory error code

    * invalid request, generally resulting from a malformed request

    * failure with a CAPTCHA challenge



A success response contains an authorization token labeled "Auth". This token must be included in all subsequent requests to the Google service for this account, which will be automatically done by Convertigo for every transaction executed in the same context. Authorization tokens should be closely guarded and should not be given to any other application, as they represent access to the user's account. The time limit on the token varies depending on which service issued it.



For example: 



<?xml version="1.0" encoding="ISO-8859-1"?>

<document connector="SpreadsheetConnector" context="..." contextId="..." fromcache="false" generated="Fri Jun 18 10:27:46 CEST 2010" project="lib_GoogleDocs" sequence="" signature="1276849666418" transaction="Login" version="5.0.5">

	<![CDATA[SID=DQAAAHkAAADyn8dvG5TFFMaMRRKTuPP9lm-z20JRq-MTwtjhgykgulbT0gTX39tCyc67oV5BZI7ixNFzF9KzEMcuFtyPHI0PPoBdwPYSj6jkaU597EWwPJ8h9sfth554serMEBXbEH2Fyj1I9hB8hqz5iacmDCen-xsB725nTVqPJ5kIS9buIg

	LSID=DQAAdrygerhcAA5F9fwhUi7Zaj_YgewWD9Ubvd7Z-3Y7ZfEMionrvM7AXises5Yp_5eG2FHrmmHVpuOo01AgxmWCRp2ScsawFWBywK-trw4iw1VylzaFM1ZKdWYttgjxh8ESdJpBokUnRtLPiPidRnQ4liNeC9EBal2xM16Mnvte_aWh-sbaw

	Auth=DQAAAHwAAAA5F9fwhUi7Zaj_YgewWD9Ubvd7Z-3Y7sfhkn<sdgM7AXises5Yp_5eG2FHrmmHVpu2dl5DaYiiGHSWEbMrQddfghfjfgjhKjk2yu61xtDj3Rj3Dpgpf31t-BZzXQOr45thNrxXFBpI8ceYleaAlhh0JGL6ytV2lhbLcyARA

	]]]]]]><![CDATA[><![CDATA[>

</document>





A failure response includes one or more error codes and a URL with the error message that can be displayed for the user. Please note that ClientLogin does not differentiate between a failure due to an incorrect password or one due to an unrecognized user name (for example, if the user has not yet signed up for an account). Your application needs to handle all possible error messages as appropriate.



For example:



<?xml version="1.0" encoding="ISO-8859-1"?>

<document connector="SpreadsheetConnector" context="..." contextId="..." fromcache="false" generated="Fri Jun 18 10:40:33 CEST 2010" project="lib_GoogleDocs" sequence="" signature="1276850433668" transaction="Login" version="5.0.5">

	<![CDATA[Error=BadAuthentication

	]]]]]]><![CDATA[><![CDATA[>

</document>





A failure response with a CAPTCHA challenge means that Google has decided, for whatever reason, that additional security measures should be taken. This response is accompanied by a CAPTCHA image URL and a token representing the specific CAPTCHA challenge.

To handle the challenge, the application must display the CAPTCHA image and solicit an answer from the user. To display the CAPTCHA image, use the value of CaptchaUrl returned with the failure response, prefixing it with the Google Accounts URL: "http://www.google.com/accounts/". Once the user provides an answer, resend the login request by calling again the Login transaction, this time including the CAPTCHA token (loginToken) and the user's answer (captchaString). Google validates the user's answer before authorizing access to the account. ]]]]><![CDATA[>
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="captchaString" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>(optional) Captcha answer string</xsd:appinfo>
<xsd:documentation><![CDATA[(optional) String entered by the user as an answer to a CAPTCHA challenge.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="accountType" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Google account type</xsd:appinfo>
<xsd:documentation><![CDATA[Type of account to request authorization for. Possible values are:



GOOGLE (get authorization for a Google account only)

HOSTED (get authorization for a hosted account only)

HOSTED_OR_GOOGLE (get authorization first for a hosted account; if attempt fails, get authorization for a Google account)



Use HOSTED_OR_GOOGLE if you're not sure which type of account you want authorization for. If the user information matches both a hosted and a Google account, only the hosted account is authorized. 
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="source" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Application source</xsd:appinfo>
<xsd:documentation><![CDATA[Short string identifying your application, for logging purposes. This string should take the form:

"companyName-applicationName-versionID". 
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="service" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Google service</xsd:appinfo>
<xsd:documentation><![CDATA[Name of the Google service you're requesting authorization for. Each service using the Authorization service is assigned a name value; for example, the name associated with Google Calendar is 'cl'. This parameter is required when accessing services based on Google Data APIs. For specific service names, refer to the service documentation.



Here the connector accesses to Spreadsheets, so the service name is "wise".
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="password" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Password</xsd:appinfo>
<xsd:documentation><![CDATA[User's password.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="username" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>User email</xsd:appinfo>
<xsd:documentation><![CDATA[User's full email address. It must include the domain (i.e. johndoe@gmail.com).
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="loginToken" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>(optional) Captcha token</xsd:appinfo>
<xsd:documentation><![CDATA[(optional) Token representing the specific CAPTCHA challenge. Google supplies this token and the CAPTCHA image URL in a login failed response with the error code "CaptchaRequired".
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__TablesList" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__TablesListRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[A table feed is a feed that allows you to treat part or all of a worksheet somewhat like a table in a database - that is, as a set of structured data items.



A table feed shows data in rows, that are called records. The table shown in a table feed can be a subset of the data in the worksheet; it can even use a set of disjoint columns, and you can define multiple tables in a single worksheet. Also, table data can come from anywhere in the worksheet; a table doesn't have to start at the top left corner of the worksheet.



Tables don't exist until you explicitly create them - before you can use a table feed, you have to explicitly define where the table data comes from, using the Data API.



This transaction retrieves a table feed with all the tables from the specified spreadsheet.



If there are several worksheets in the specified spreadsheet, it retrieves all tables from all worksheets.


]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__TablesListResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__TablesListResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__TablesListRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[A table feed is a feed that allows you to treat part or all of a worksheet somewhat like a table in a database - that is, as a set of structured data items.



A table feed shows data in rows, that are called records. The table shown in a table feed can be a subset of the data in the worksheet; it can even use a set of disjoint columns, and you can define multiple tables in a single worksheet. Also, table data can come from anywhere in the worksheet; a table doesn't have to start at the top left corner of the worksheet.



Tables don't exist until you explicitly create them - before you can use a table feed, you have to explicitly define where the table data comes from, using the Data API.



This transaction retrieves a table feed with all the tables from the specified spreadsheet.



If there are several worksheets in the specified spreadsheet, it retrieves all tables from all worksheets.


]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheet metafeed, the URI given in the <link> element with rel="alternate" contains the key parameter which is the spreadsheet ID.

Note that the key value that appears here is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



To easily get the spreadsheet key from the spreadsheet metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__ListRowAdd" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__ListRowAddRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Adds a new row on an existing table on a specified worksheet.



Spreadsheets inserts the new row immediately after the last row that appears in the list-based feed, which is to say immediately before the first entirely blank row.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__ListRowAddResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__ListRowAddResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__ListRowAddRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Adds a new row on an existing table on a specified worksheet.



Spreadsheets inserts the new row immediately after the last row that appears in the list-based feed, which is to say immediately before the first entirely blank row.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="worksheetID" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Worksheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the sheet parameter which is the worksheet ID.



Example :



        <entry gd:etag="&quot;U1RIVxJBSSt7ImBvA1c.&quot;">

            <id>http://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6</id>

            <updated>2010-05-20T12:49:59.492Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-05-20T12:49:59.492Z</app:edited>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#worksheet"/>

            <title>Sheet1</title>

            <content src="http://spreadsheets.google.com/feeds/list/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/cells/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/od6/private/full" rel="http://schemas.google.com/spreadsheets/2006#cellsfeed" type="application/atom+xml"/>



            <link href="http://spreadsheets.google.com/tq?key=0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE&amp;sheet=od6" rel="http://schemas.google.com/visualization/2008#visualizationApi" type="application/atom+xml"/>



            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/worksheets/0AiPfeOwPkXkpdHE0dEtqUFV3UmtQeGNwUzNXeUlMOFE/private/full/od6" rel="edit" type="application/atom+xml"/>

            <gs:rowCount>100</gs:rowCount>

            <gs:colCount>20</gs:colCount>

        </entry>



To easily get the worksheet ID from the worksheet metafeed, you can use the "HelperGetWorksheetId" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheet metafeed, the URI given in the <link> element with rel="alternate" contains the key parameter which is the spreadsheet ID.

Note that the key value that appears here is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>



            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>



            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



To easily get the spreadsheet key from the spreadsheet metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="columnName">
<xsd:annotation>
<xsd:appinfo>Columns names</xsd:appinfo>
<xsd:documentation><![CDATA[Names of the row's columns.
]]></xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="item" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="columnValue">
<xsd:annotation>
<xsd:appinfo>Columns values</xsd:appinfo>
<xsd:documentation><![CDATA[Values of the row's columns.
]]></xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="item" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__WorksheetAdd" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__WorksheetAddRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Adds a new worksheet with a title in a given spreadsheet.



Spreadsheets inserts the new worksheet immediately after the last worksheet that appears in Spreadsheets UI.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__WorksheetAddResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__WorksheetAddResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__WorksheetAddRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[Adds a new worksheet with a title in a given spreadsheet.



Spreadsheets inserts the new worksheet immediately after the last worksheet that appears in Spreadsheets UI.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheet metafeed, the URI given in the <link> element with rel="alternate" contains the key parameter which is the spreadsheet ID.

Note that the key value that appears here is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>



            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>



            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



In the worksheet metafeed, the URI given in the <link> element with rel="http://schemas.google.com/visualization/2008#visualizationApi" contains the key parameter too.



To easily get the spreadsheet key from the spreadsheet metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="title" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>New worksheet title</xsd:appinfo>
<xsd:documentation><![CDATA[Title of the new worksheet to create.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__RecordsList" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__RecordsListRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[A table consists of a set of records. For a given table, you can retrieve that table's record feed to see the contents of the records.



Note that the order of items in each record is the same as the order of columns in the table definition, which may not match the order of columns in the GUI.



This transaction retrieves a table's record feed with all the records from the specified table of the specified spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__RecordsListResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__RecordsListResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__RecordsListRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[A table consists of a set of records. For a given table, you can retrieve that table's record feed to see the contents of the records.



Note that the order of items in each record is the same as the order of columns in the table definition, which may not match the order of columns in the GUI.



This transaction retrieves a table's record feed with all the records from the specified table of the specified spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="reverseSort" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Reverse sorting mode</xsd:appinfo>
<xsd:documentation><![CDATA[By default, records in the feed appear in the same order as the corresponding rows in the GUI; that is, they're in order by row number. 



To get records in reverse order, set the following parameter to 'true'.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheet metafeed, the URI given in the <link> element with rel="alternate" contains the key parameter which is the spreadsheet ID.

Note that the key value that appears here is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



To easily get the spreadsheet key from the spreadsheet metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="tableNumber" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Table number</xsd:appinfo>
<xsd:documentation><![CDATA[In the table metafeed, the URI given in the <link> element with rel="edit" contains the data which is the table number, after the substring "/tables/".



Example :



       <entry gd:etag="&quot;CERXVEQNByt7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0</id>

            <updated>2010-06-11T14:47:40.261Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-11T14:47:40.261Z</app:edited>

            <category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/spreadsheets/2006#table"/>

            <title>Table2</title>

            <summary>This is a list of all who have registered to vote.</summary>

            <content src="http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0" type="application/atom+xml;type=feed"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="edit" type="application/atom+xml"/>

            <gs:worksheet name="Feuille2"/>

            <gs:header row="1"/>

            <gs:options allCols="false" allRows="false"/>

            <gs:data insertionMode="overwrite" numRows="4" startRow="5">

                <gs:column index="D" name="fourth column"/>

                <gs:column index="C" name="third column"/>

                <gs:column index="A" name="first column"/>

            </gs:data>

        </entry>



To easily get the table number from the table metafeed, you can use the "HelperGetTableNumber" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_feed_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_feed_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_feed_authorType">
<xsd:sequence>
<xsd:element minOccurs="0" name="name" type="xsd:string"/>
<xsd:element minOccurs="0" name="email" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_feed_entry_editedType"/>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_feed_entry_categoryType">
<xsd:attribute name="scheme" type="xsd:anyURI"/>
<xsd:attribute name="term" type="xsd:anyURI"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_feed_entry_linkType">
<xsd:attribute name="href" type="xsd:anyURI"/>
<xsd:attribute name="rel" type="xsd:string"/>
<xsd:attribute name="type" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_feed_entry_fieldType">
<xsd:attribute name="index" type="xsd:string"/>
<xsd:attribute name="name" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_feed_entryType">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="edited" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_feed_entry_editedType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_feed_entry_categoryType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="title" type="xsd:byte"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="content" type="xsd:string"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_feed_entry_linkType"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="field" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_feed_entry_fieldType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector_RecordsList_document_feedType">
<xsd:sequence>
<xsd:element minOccurs="0" name="id" type="xsd:anyURI"/>
<xsd:element minOccurs="0" name="updated" type="xsd:date"/>
<xsd:element minOccurs="0" name="category" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_feed_categoryType"/>
<xsd:element minOccurs="0" name="title" type="xsd:string"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="link" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_feed_linkType"/>
<xsd:element minOccurs="0" name="author" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_feed_authorType"/>
<xsd:element minOccurs="0" name="totalResults" type="xsd:byte"/>
<xsd:element minOccurs="0" name="startIndex" type="xsd:byte"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="entry" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_feed_entryType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__RecordsListResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="feed" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_feedType"/>
<xsd:element minOccurs="0" name="error" type="lib_GoogleSpreadsheets_ns:ConvertigoError"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:element name="SpreadsheetConnector__HelperGetRecordNumber" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetRecordNumberRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a record ID by splitting record entry data from the record metafeed.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SpreadsheetConnector__HelperGetRecordNumberResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetRecordNumberResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SpreadsheetConnector__HelperGetRecordNumberRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a record ID by splitting record entry data from the record metafeed.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="recordIdUrl" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Record id URL</xsd:appinfo>
<xsd:documentation><![CDATA[In the records metafeed, the URL given in the <id> element of the record entry is the record id URL.



Example :



	<entry gd:etag="&quot;YD0reyI.&quot;">

            <id>http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0/cokwr</id>

            <updated>2010-06-14T14:10:50.365Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-14T14:10:50.365Z</app:edited>

            <category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/spreadsheets/2006#record"/>

            <title/>

            <content>fourth column: , third column: , first column: </content>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0/cokwr" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0/cokwr" rel="edit" type="application/atom+xml"/>

            <gs:field index="B" name="fourth column"/>

            <gs:field index="A" name="third column"/>

            <gs:field index="A" name="first column"/>

        </entry>
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="key" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Spreadsheet ID</xsd:appinfo>
<xsd:documentation><![CDATA[In the spreadsheets metafeed, the URL given in the <id> element of the spreadsheet entry is the spreadsheet id URL.

Note that the key value that appears here  and that is retrieved by this transaction is the same as the key value that appears in the URL displayed in the address bar of your browser window when you open the spreadsheet manually.



Example :



	<entry gd:etag="&quot;UEAIVxkPRit7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/spreadsheets/txds3zcAaa4kKD9lyUvnsdA</id>

            <updated>2010-05-20T12:49:21.541Z</updated>

            <category scheme="http://schemas.google.com/spreadsheets/2006" term="http://schemas.google.com/spreadsheets/2006#spreadsheet"/>

            <title>Toto</title>

            <content src="http://spreadsheets.google.com/feeds/worksheets/txds3zcAaa4kKD9lyUvnsdA/private/full" type="application/atom+xml;type=feed"/>

            <link href="http://spreadsheets.google.com/feeds/txds3zcAaa4kKD9lyUvnsdA/tables" rel="http://schemas.google.com/spreadsheets/2006#tablesfeed" type="application/atom+xml"/>

            <link href="http://spreadsheets.google.com/ccc?key=0AiPfeOwPkXkpdHhkczN6Y0FhYTRrS0Q5bHlVdm5zZEE" rel="alternate" type="text/html"/>

            <link href="https://spreadsheets.google.com/feeds/spreadsheets/private/full/txds3zcAaa4kKD9lyUvnsdA" rel="self" type="application/atom+xml"/>

            <author>

                <name>...</name>

                <email>...</email>

            </author>

	</entry>



To easily get the spreadsheet key from the spreadsheets metafeed, you can use the "HelperGetSpreadsheetKey" transaction from this project.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="tableNumber" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Table number</xsd:appinfo>
<xsd:documentation><![CDATA[In the table metafeed, the URI given in the <link> element with rel="edit" contains the data which is the table number, after the substring "/tables/".



Example :



       <entry gd:etag="&quot;CERXVEQNByt7ImBr&quot;">

            <id>http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0</id>

            <updated>2010-06-11T14:47:40.261Z</updated>

            <app:edited xmlns:app="http://www.w3.org/2007/app">2010-06-11T14:47:40.261Z</app:edited>

            <category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/spreadsheets/2006#table"/>

            <title>Table2</title>

            <summary>This is a list of all who have registered to vote.</summary>

            <content src="http://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/records/0" type="application/atom+xml;type=feed"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="self" type="application/atom+xml"/>

            <link href="https://spreadsheets.google.com/feeds/td0ZjT6ZK_6JTa8m4CARnFg/tables/0" rel="edit" type="application/atom+xml"/>

            <gs:worksheet name="Feuille2"/>

            <gs:header row="1"/>

            <gs:options allCols="false" allRows="false"/>

            <gs:data insertionMode="overwrite" numRows="4" startRow="5">

                <gs:column index="D" name="fourth column"/>

                <gs:column index="C" name="third column"/>

                <gs:column index="A" name="first column"/>

            </gs:data>

        </entry>



To easily get the table number from the tables metafeed, you can use the "HelperGetTableNumber" transaction from this project.


]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SpreadsheetConnector__HelperGetRecordNumberResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="recordNumber" type="xsd:string"/>
<xsd:element minOccurs="0" name="error" type="lib_GoogleSpreadsheets_ns:ConvertigoError"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="transaction1277729505663StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__ListRowsListResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[A given worksheet generally contains multiple rows, each containing multiple cells. You can request data from the worksheet as a list-based feed, in which each entry represents a row.



The list feed makes some assumptions about how the data is laid out in the spreadsheet. In particular, the list feed treats the first row of the worksheet as a header row; Spreadsheets dynamically creates XML elements named after the contents of header-row cells. Users who want to provide Data API feeds should not put any data other than column headers in the first row of a worksheet.



The list feed contains all rows after the first row up to the first blank row. The first blank row terminates the data set. If expected data isn't appearing in a feed, check the worksheet manually to see whether there's an unexpected blank row in the middle of the data. In particular, if the second row of the spreadsheet is blank, then the list feed will contain no data.



A row in a list feed is as many columns wide as the worksheet itself.



This transaction retrieves a list-based feed with all the tables from the specified worksheet of the specified spreadsheet.



Each entry represents a row in the worksheet. The <title> element contains the contents of the first cell in the row, and the <content> element contains a textual representation of the data from all the other cells in the row.

Each item in the gsx namespace represents the contents of a cell in the row, with elements in the gsx namespace named after the contents of the header cells?that is, the cells in the first row of the worksheet. If a particular header cell is empty, then a unique column ID is used for the gsx element name. If the header cell's content contains a space, it will be removed in the gsx element name.


]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="table1294666297592StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
<xsd:element minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="title" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
<xsd:attribute name="summary" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
<xsd:attribute name="worksheetName" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
</xsd:complexType>
<xsd:complexType name="transaction1294666297637StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetRecordNumberResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a record ID by splitting record entry data from the record metafeed.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1294666297613StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__RecordsListResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[A table consists of a set of records. For a given table, you can retrieve that table's record feed to see the contents of the records.



Note that the order of items in each record is the same as the order of columns in the table definition, which may not match the order of columns in the GUI.



This transaction retrieves a table's record feed with all the records from the specified table of the specified spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1294666297666StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__ListRowsListResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[A given worksheet generally contains multiple rows, each containing multiple cells. You can request data from the worksheet as a list-based feed, in which each entry represents a row.



The list feed makes some assumptions about how the data is laid out in the spreadsheet. In particular, the list feed treats the first row of the worksheet as a header row; Spreadsheets dynamically creates XML elements named after the contents of header-row cells. Users who want to provide Data API feeds should not put any data other than column headers in the first row of a worksheet.



The list feed contains all rows after the first row up to the first blank row. The first blank row terminates the data set. If expected data isn't appearing in a feed, check the worksheet manually to see whether there's an unexpected blank row in the middle of the data. In particular, if the second row of the spreadsheet is blank, then the list feed will contain no data.



A row in a list feed is as many columns wide as the worksheet itself.



This transaction retrieves a list-based feed with all the tables from the specified worksheet of the specified spreadsheet.



Each entry represents a row in the worksheet. The <title> element contains the contents of the first cell in the row, and the <content> element contains a textual representation of the data from all the other cells in the row.

Each item in the gsx namespace represents the contents of a cell in the row, with elements in the gsx namespace named after the contents of the header cells?that is, the cells in the first row of the worksheet. If a particular header cell is empty, then a unique column ID is used for the gsx element name. If the header cell's content contains a space, it will be removed in the gsx element name.


]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="usingGoogleSpreadsheets" type="lib_GoogleSpreadsheets_ns:usingGoogleSpreadsheetsRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This sequence is a sample use of the Web service methods provided by SpreadsheetConnector.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="usingGoogleSpreadsheetsResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_GoogleSpreadsheets_ns:usingGoogleSpreadsheetsResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="usingGoogleSpreadsheetsRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This sequence is a sample use of the Web service methods provided by SpreadsheetConnector.
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="psswd" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>new variable</xsd:appinfo>
</xsd:annotation>
</xsd:element>
<xsd:element name="login" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>new variable</xsd:appinfo>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="usingGoogleSpreadsheetsResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="username" type="xsd:string">
<xsd:annotation/>
</xsd:element>
<xsd:element minOccurs="0" name="password" type="xsd:string">
<xsd:annotation/>
</xsd:element>
<xsd:element minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
<xsd:element minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
<xsd:element minOccurs="0" name="spreadsheets" type="lib_GoogleSpreadsheets_ns:spreadsheets1276876365166StepType">
<xsd:annotation/>
</xsd:element>
<xsd:element minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="worksheet1276876759432StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="listRow" type="lib_GoogleSpreadsheets_ns:listRow1277974986380StepType">
<xsd:annotation/>
</xsd:element>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
<xsd:element minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="title" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
<xsd:attribute name="rowCount" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
<xsd:attribute name="colCount" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
</xsd:complexType>
<xsd:complexType name="tables1277975775484StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="table" type="lib_GoogleSpreadsheets_ns:table1277729504725StepType">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1276867597330StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__ListRowsListResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[A given worksheet generally contains multiple rows, each containing multiple cells. You can request data from the worksheet as a list-based feed, in which each entry represents a row.



The list feed makes some assumptions about how the data is laid out in the spreadsheet. In particular, the list feed treats the first row of the worksheet as a header row; Spreadsheets dynamically creates XML elements named after the contents of header-row cells. Users who want to provide Data API feeds should not put any data other than column headers in the first row of a worksheet.



The list feed contains all rows after the first row up to the first blank row. The first blank row terminates the data set. If expected data isn't appearing in a feed, check the worksheet manually to see whether there's an unexpected blank row in the middle of the data. In particular, if the second row of the spreadsheet is blank, then the list feed will contain no data.



A row in a list feed is as many columns wide as the worksheet itself.



This transaction retrieves a list-based feed with all the tables from the specified worksheet of the specified spreadsheet.



Each entry represents a row in the worksheet. The <title> element contains the contents of the first cell in the row, and the <content> element contains a textual representation of the data from all the other cells in the row.

Each item in the gsx namespace represents the contents of a cell in the row, with elements in the gsx namespace named after the contents of the header cells?that is, the cells in the first row of the worksheet. If a particular header cell is empty, then a unique column ID is used for the gsx element name. If the header cell's content contains a space, it will be removed in the gsx element name.


]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1277729504585StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetTableNumberResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a table number by splitting table entry data from the table metafeed.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="table1277729504725StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="record" type="lib_GoogleSpreadsheets_ns:record1294666297592StepType">
<xsd:annotation/>
</xsd:element>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
<xsd:element minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="title" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
<xsd:attribute name="summary" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
<xsd:attribute name="worksheetName" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
</xsd:complexType>
<xsd:complexType name="transaction1277729504256StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__TablesListResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[A table feed is a feed that allows you to treat part or all of a worksheet somewhat like a table in a database - that is, as a set of structured data items.



A table feed shows data in rows, that are called records. The table shown in a table feed can be a subset of the data in the worksheet; it can even use a set of disjoint columns, and you can define multiple tables in a single worksheet. Also, table data can come from anywhere in the worksheet; a table doesn't have to start at the top left corner of the worksheet.



Tables don't exist until you explicitly create them - before you can use a table feed, you have to explicitly define where the table data comes from, using the Data API.



This transaction retrieves a table feed with all the tables from the specified spreadsheet.



If there are several worksheets in the specified spreadsheet, it retrieves all tables from all worksheets.


]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1276784292684StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__LoginResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[<![CDATA[Accesses a user's Google account.



Once the login information has been successfully authenticated, Google returns a token, which your application will reference each time it requests access to the user's account. This token reference will automatically be added by Convertigo for all transactions executed in the same context. 



The token remains valid for a set length of time, which is defined by whichever Google service you're working with.



There are four possible responses to a login request:



    * success

    * failure, with an explanatory error code

    * invalid request, generally resulting from a malformed request

    * failure with a CAPTCHA challenge



A success response contains an authorization token labeled "Auth". This token must be included in all subsequent requests to the Google service for this account, which will be automatically done by Convertigo for every transaction executed in the same context. Authorization tokens should be closely guarded and should not be given to any other application, as they represent access to the user's account. The time limit on the token varies depending on which service issued it.



For example: 



<?xml version="1.0" encoding="ISO-8859-1"?>

<document connector="SpreadsheetConnector" context="..." contextId="..." fromcache="false" generated="Fri Jun 18 10:27:46 CEST 2010" project="lib_GoogleDocs" sequence="" signature="1276849666418" transaction="Login" version="5.0.5">

	<![CDATA[SID=DQAAAHkAAADyn8dvG5TFFMaMRRKTuPP9lm-z20JRq-MTwtjhgykgulbT0gTX39tCyc67oV5BZI7ixNFzF9KzEMcuFtyPHI0PPoBdwPYSj6jkaU597EWwPJ8h9sfth554serMEBXbEH2Fyj1I9hB8hqz5iacmDCen-xsB725nTVqPJ5kIS9buIg

	LSID=DQAAdrygerhcAA5F9fwhUi7Zaj_YgewWD9Ubvd7Z-3Y7ZfEMionrvM7AXises5Yp_5eG2FHrmmHVpuOo01AgxmWCRp2ScsawFWBywK-trw4iw1VylzaFM1ZKdWYttgjxh8ESdJpBokUnRtLPiPidRnQ4liNeC9EBal2xM16Mnvte_aWh-sbaw

	Auth=DQAAAHwAAAA5F9fwhUi7Zaj_YgewWD9Ubvd7Z-3Y7sfhkn<sdgM7AXises5Yp_5eG2FHrmmHVpu2dl5DaYiiGHSWEbMrQddfghfjfgjhKjk2yu61xtDj3Rj3Dpgpf31t-BZzXQOr45thNrxXFBpI8ceYleaAlhh0JGL6ytV2lhbLcyARA

	]]]]]]><![CDATA[><![CDATA[>

</document>





A failure response includes one or more error codes and a URL with the error message that can be displayed for the user. Please note that ClientLogin does not differentiate between a failure due to an incorrect password or one due to an unrecognized user name (for example, if the user has not yet signed up for an account). Your application needs to handle all possible error messages as appropriate.



For example:



<?xml version="1.0" encoding="ISO-8859-1"?>

<document connector="SpreadsheetConnector" context="..." contextId="..." fromcache="false" generated="Fri Jun 18 10:40:33 CEST 2010" project="lib_GoogleDocs" sequence="" signature="1276850433668" transaction="Login" version="5.0.5">

	<![CDATA[Error=BadAuthentication

	]]]]]]><![CDATA[><![CDATA[>

</document>





A failure response with a CAPTCHA challenge means that Google has decided, for whatever reason, that additional security measures should be taken. This response is accompanied by a CAPTCHA image URL and a token representing the specific CAPTCHA challenge.

To handle the challenge, the application must display the CAPTCHA image and solicit an answer from the user. To display the CAPTCHA image, use the value of CaptchaUrl returned with the failure response, prefixing it with the Google Accounts URL: "http://www.google.com/accounts/". Once the user provides an answer, resend the login request by calling again the Login transaction, this time including the CAPTCHA token (loginToken) and the user's answer (captchaString). Google validates the user's answer before authorizing access to the account. ]]]]><![CDATA[>
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1276855055963StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetSpreadsheetKeyResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a spreadsheet key by splitting spreadsheet entry data from the spreadsheet metafeed.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1277729505053StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__RecordsListResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[A table consists of a set of records. For a given table, you can retrieve that table's record feed to see the contents of the records.



Note that the order of items in each record is the same as the order of columns in the table definition, which may not match the order of columns in the GUI.



This transaction retrieves a table's record feed with all the records from the specified table of the specified spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1276867597142StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetWorksheetIdResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a worksheet ID by splitting worksheet entry data from the worksheet metafeed.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="spreadsheet1276876677604StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
<xsd:element minOccurs="0" name="worksheets" type="lib_GoogleSpreadsheets_ns:worksheets1277975747141StepType">
<xsd:annotation/>
</xsd:element>
<xsd:element minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
<xsd:element minOccurs="0" name="tables" type="lib_GoogleSpreadsheets_ns:tables1277975775484StepType">
<xsd:annotation/>
</xsd:element>
<xsd:element minOccurs="0" name="error" type="xsd:string">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="title" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
<xsd:attribute name="authorName" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
</xsd:complexType>
<xsd:complexType name="transaction1276866739463StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__WorksheetsListResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[A given spreadsheet may contain multiple worksheets. For each spreadsheet, there's a worksheets metafeed listing all the worksheets in that spreadsheet.



This transaction retrieves a list of worksheets in a given spreadsheet.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="spreadsheets1276876365166StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="spreadsheet" type="lib_GoogleSpreadsheets_ns:spreadsheet1276876677604StepType">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="record1294666297592StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="field" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector_RecordsList_document_feed_entry_fieldType"/>
</xsd:sequence>
<xsd:attribute name="recordNumber" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
<xsd:attribute name="title" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
<xsd:attribute name="content" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
</xsd:complexType>
<xsd:complexType name="transaction1276854489759StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__SpreadsheetsListResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[Retrieves a list of the currently authenticated user's spreadsheets.



The result is a "metafeed," a feed that lists all of that user's feeds of a particular type; in this case, each entry in the feed represents a spreadsheet associated with the user.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="listRow1277974986380StepType">
<xsd:annotation/>
<xsd:sequence/>
<xsd:attribute name="title" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
<xsd:attribute name="content" type="xsd:string" use="optional">
<xsd:annotation/>
</xsd:attribute>
</xsd:complexType>
<xsd:complexType name="worksheets1277975747141StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="worksheet" type="lib_GoogleSpreadsheets_ns:worksheet1276876759432StepType">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1277729505428StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetRecordNumberResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a record ID by splitting record entry data from the record metafeed.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1276876485744StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__HelperGetListRowIdResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction retrieves a list row ID by splitting list row entry data from the list row metafeed.
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:schema>
