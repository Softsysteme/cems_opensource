<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:lib_GoogleSpreadsheets_ns="http://www.convertigo.com/convertigo/projects/lib_GoogleSpreadsheets" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.convertigo.com/convertigo/projects/lib_GoogleSpreadsheets">
    <xsd:element name="SpreadsheetConnector__Login" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__LoginRequestData">
        <xsd:annotation>
            <xsd:documentation><![CDATA[<![CDATA[Accesses a user's Google account.
\n
\nOnce the login information has been successfully authenticated, Google returns a token, which your application will reference each time it requests access to the user's account. This token reference will automatically be added by Convertigo for all transactions executed in the same context. 
\n
\nThe token remains valid for a set length of time, which is defined by whichever Google service you're working with.
\n
\nThere are four possible responses to a login request:
\n
\n    * success
\n    * failure, with an explanatory error code
\n    * invalid request, generally resulting from a malformed request
\n    * failure with a CAPTCHA challenge
\n
\nA success response contains an authorization token labeled "Auth". This token must be included in all subsequent requests to the Google service for this account, which will be automatically done by Convertigo for every transaction executed in the same context. Authorization tokens should be closely guarded and should not be given to any other application, as they represent access to the user's account. The time limit on the token varies depending on which service issued it.
\n
\nFor example: 
\n
\n<?xml version="1.0" encoding="ISO-8859-1"?>
\n<document connector="SpreadsheetConnector" context="..." contextId="..." fromcache="false" generated="Fri Jun 18 10:27:46 CEST 2010" project="lib_GoogleDocs" sequence="" signature="1276849666418" transaction="Login" version="5.0.5">
\n	<![CDATA[SID=DQAAAHkAAADyn8dvG5TFFMaMRRKTuPP9lm-z20JRq-MTwtjhgykgulbT0gTX39tCyc67oV5BZI7ixNFzF9KzEMcuFtyPHI0PPoBdwPYSj6jkaU597EWwPJ8h9sfth554serMEBXbEH2Fyj1I9hB8hqz5iacmDCen-xsB725nTVqPJ5kIS9buIg
\n	LSID=DQAAdrygerhcAA5F9fwhUi7Zaj_YgewWD9Ubvd7Z-3Y7ZfEMionrvM7AXises5Yp_5eG2FHrmmHVpuOo01AgxmWCRp2ScsawFWBywK-trw4iw1VylzaFM1ZKdWYttgjxh8ESdJpBokUnRtLPiPidRnQ4liNeC9EBal2xM16Mnvte_aWh-sbaw
\n	Auth=DQAAAHwAAAA5F9fwhUi7Zaj_YgewWD9Ubvd7Z-3Y7sfhkn<sdgM7AXises5Yp_5eG2FHrmmHVpu2dl5DaYiiGHSWEbMrQddfghfjfgjhKjk2yu61xtDj3Rj3Dpgpf31t-BZzXQOr45thNrxXFBpI8ceYleaAlhh0JGL6ytV2lhbLcyARA
\n	]]]]]]><![CDATA[><![CDATA[>
\n</document>
\n
\n
\nA failure response includes one or more error codes and a URL with the error message that can be displayed for the user. Please note that ClientLogin does not differentiate between a failure due to an incorrect password or one due to an unrecognized user name (for example, if the user has not yet signed up for an account). Your application needs to handle all possible error messages as appropriate.
\n
\nFor example:
\n
\n<?xml version="1.0" encoding="ISO-8859-1"?>
\n<document connector="SpreadsheetConnector" context="..." contextId="..." fromcache="false" generated="Fri Jun 18 10:40:33 CEST 2010" project="lib_GoogleDocs" sequence="" signature="1276850433668" transaction="Login" version="5.0.5">
\n	<![CDATA[Error=BadAuthentication
\n	]]]]]]><![CDATA[><![CDATA[>
\n</document>
\n
\n
\nA failure response with a CAPTCHA challenge means that Google has decided, for whatever reason, that additional security measures should be taken. This response is accompanied by a CAPTCHA image URL and a token representing the specific CAPTCHA challenge.
\nTo handle the challenge, the application must display the CAPTCHA image and solicit an answer from the user. To display the CAPTCHA image, use the value of CaptchaUrl returned with the failure response, prefixing it with the Google Accounts URL: "http://www.google.com/accounts/". Once the user provides an answer, resend the login request by calling again the Login transaction, this time including the CAPTCHA token (loginToken) and the user's answer (captchaString). Google validates the user's answer before authorizing access to the account. ]]]]><![CDATA[>
]]></xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="SpreadsheetConnector__LoginRequestData">
        <xsd:annotation>
            <xsd:documentation><![CDATA[<![CDATA[Accesses a user's Google account.
\n
\nOnce the login information has been successfully authenticated, Google returns a token, which your application will reference each time it requests access to the user's account. This token reference will automatically be added by Convertigo for all transactions executed in the same context. 
\n
\nThe token remains valid for a set length of time, which is defined by whichever Google service you're working with.
\n
\nThere are four possible responses to a login request:
\n
\n    * success
\n    * failure, with an explanatory error code
\n    * invalid request, generally resulting from a malformed request
\n    * failure with a CAPTCHA challenge
\n
\nA success response contains an authorization token labeled "Auth". This token must be included in all subsequent requests to the Google service for this account, which will be automatically done by Convertigo for every transaction executed in the same context. Authorization tokens should be closely guarded and should not be given to any other application, as they represent access to the user's account. The time limit on the token varies depending on which service issued it.
\n
\nFor example: 
\n
\n<?xml version="1.0" encoding="ISO-8859-1"?>
\n<document connector="SpreadsheetConnector" context="..." contextId="..." fromcache="false" generated="Fri Jun 18 10:27:46 CEST 2010" project="lib_GoogleDocs" sequence="" signature="1276849666418" transaction="Login" version="5.0.5">
\n	<![CDATA[SID=DQAAAHkAAADyn8dvG5TFFMaMRRKTuPP9lm-z20JRq-MTwtjhgykgulbT0gTX39tCyc67oV5BZI7ixNFzF9KzEMcuFtyPHI0PPoBdwPYSj6jkaU597EWwPJ8h9sfth554serMEBXbEH2Fyj1I9hB8hqz5iacmDCen-xsB725nTVqPJ5kIS9buIg
\n	LSID=DQAAdrygerhcAA5F9fwhUi7Zaj_YgewWD9Ubvd7Z-3Y7ZfEMionrvM7AXises5Yp_5eG2FHrmmHVpuOo01AgxmWCRp2ScsawFWBywK-trw4iw1VylzaFM1ZKdWYttgjxh8ESdJpBokUnRtLPiPidRnQ4liNeC9EBal2xM16Mnvte_aWh-sbaw
\n	Auth=DQAAAHwAAAA5F9fwhUi7Zaj_YgewWD9Ubvd7Z-3Y7sfhkn<sdgM7AXises5Yp_5eG2FHrmmHVpu2dl5DaYiiGHSWEbMrQddfghfjfgjhKjk2yu61xtDj3Rj3Dpgpf31t-BZzXQOr45thNrxXFBpI8ceYleaAlhh0JGL6ytV2lhbLcyARA
\n	]]]]]]><![CDATA[><![CDATA[>
\n</document>
\n
\n
\nA failure response includes one or more error codes and a URL with the error message that can be displayed for the user. Please note that ClientLogin does not differentiate between a failure due to an incorrect password or one due to an unrecognized user name (for example, if the user has not yet signed up for an account). Your application needs to handle all possible error messages as appropriate.
\n
\nFor example:
\n
\n<?xml version="1.0" encoding="ISO-8859-1"?>
\n<document connector="SpreadsheetConnector" context="..." contextId="..." fromcache="false" generated="Fri Jun 18 10:40:33 CEST 2010" project="lib_GoogleDocs" sequence="" signature="1276850433668" transaction="Login" version="5.0.5">
\n	<![CDATA[Error=BadAuthentication
\n	]]]]]]><![CDATA[><![CDATA[>
\n</document>
\n
\n
\nA failure response with a CAPTCHA challenge means that Google has decided, for whatever reason, that additional security measures should be taken. This response is accompanied by a CAPTCHA image URL and a token representing the specific CAPTCHA challenge.
\nTo handle the challenge, the application must display the CAPTCHA image and solicit an answer from the user. To display the CAPTCHA image, use the value of CaptchaUrl returned with the failure response, prefixing it with the Google Accounts URL: "http://www.google.com/accounts/". Once the user provides an answer, resend the login request by calling again the Login transaction, this time including the CAPTCHA token (loginToken) and the user's answer (captchaString). Google validates the user's answer before authorizing access to the account. ]]]]><![CDATA[>
]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="username" type="xsd:string">
                <xsd:annotation>
                    <xsd:appinfo>User email</xsd:appinfo>
                    <xsd:documentation><![CDATA[User's full email address. It must include the domain (i.e. johndoe@gmail.com).
]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="password" type="xsd:string">
                <xsd:annotation>
                    <xsd:appinfo>Password</xsd:appinfo>
                    <xsd:documentation><![CDATA[User's password.
]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="accountType" type="xsd:string">
                <xsd:annotation>
                    <xsd:appinfo>Google account type</xsd:appinfo>
                    <xsd:documentation><![CDATA[Type of account to request authorization for. Possible values are:
\n
\nGOOGLE (get authorization for a Google account only)
\nHOSTED (get authorization for a hosted account only)
\nHOSTED_OR_GOOGLE (get authorization first for a hosted account; if attempt fails, get authorization for a Google account)
\n
\nUse HOSTED_OR_GOOGLE if you're not sure which type of account you want authorization for. If the user information matches both a hosted and a Google account, only the hosted account is authorized. 
]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="service" type="xsd:string">
                <xsd:annotation>
                    <xsd:appinfo>Google service</xsd:appinfo>
                    <xsd:documentation><![CDATA[Name of the Google service you're requesting authorization for. Each service using the Authorization service is assigned a name value; for example, the name associated with Google Calendar is 'cl'. This parameter is required when accessing services based on Google Data APIs. For specific service names, refer to the service documentation.
\n
\nHere the connector accesses to Spreadsheets, so the service name is "wise".
]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="source" type="xsd:string">
                <xsd:annotation>
                    <xsd:appinfo>Application source</xsd:appinfo>
                    <xsd:documentation><![CDATA[Short string identifying your application, for logging purposes. This string should take the form:
\n"companyName-applicationName-versionID". 
]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="loginToken" type="xsd:string">
                <xsd:annotation>
                    <xsd:appinfo>(optional) Captcha token</xsd:appinfo>
                    <xsd:documentation><![CDATA[(optional) Token representing the specific CAPTCHA challenge. Google supplies this token and the CAPTCHA image URL in a login failed response with the error code "CaptchaRequired".
]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="captchaString" type="xsd:string">
                <xsd:annotation>
                    <xsd:appinfo>(optional) Captcha answer string</xsd:appinfo>
                    <xsd:documentation><![CDATA[(optional) String entered by the user as an answer to a CAPTCHA challenge.
]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="SpreadsheetConnector__LoginResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="response" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__LoginResponseData"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="SpreadsheetConnector__LoginResponseData">
        <xsd:sequence>
            <xsd:element minOccurs="0" name="error" type="lib_GoogleSpreadsheets_ns:ConvertigoError"/>
        </xsd:sequence>
        <xsd:attribute name="connector" type="xsd:string"/>
        <xsd:attribute name="context" type="xsd:string"/>
        <xsd:attribute name="contextId" type="xsd:string"/>
        <xsd:attribute name="fromcache" type="xsd:boolean"/>
        <xsd:attribute name="generated" type="xsd:string"/>
        <xsd:attribute name="project" type="xsd:string"/>
        <xsd:attribute name="sequence" type="xsd:string"/>
        <xsd:attribute name="signature" type="xsd:long"/>
        <xsd:attribute name="transaction" type="xsd:string"/>
        <xsd:attribute name="version" type="xsd:string"/>
        <xsd:attribute name="fromStub" type="xsd:string"/>
        <xsd:attribute name="screenclass" type="xsd:string"/>
    </xsd:complexType>
    <xsd:complexType name="SpreadsheetConnector__LoginResponseType">
        <xsd:sequence>
            <xsd:element name="document" type="lib_GoogleSpreadsheets_ns:SpreadsheetConnector__LoginResponseData"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="ConvertigoErrorContextVariable">
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="value" type="xsd:string"/>
    </xsd:complexType>
    <xsd:complexType name="ConvertigoErrorContext">
        <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="variable" type="lib_GoogleSpreadsheets_ns:ConvertigoErrorContextVariable"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="ConvertigoError">
        <xsd:sequence minOccurs="0">
            <xsd:element name="code" type="xsd:integer"/>
            <xsd:element name="message" type="xsd:string"/>
            <xsd:element name="details" type="xsd:string"/>
            <xsd:element name="context" type="lib_GoogleSpreadsheets_ns:ConvertigoErrorContext"/>
            <xsd:element name="exception" type="xsd:string"/>
            <xsd:element name="stacktrace" type="xsd:string"/>
        </xsd:sequence>
        <xsd:attribute name="project" type="xsd:string"/>
        <xsd:attribute name="connector" type="xsd:string"/>
        <xsd:attribute name="transaction" type="xsd:string"/>
        <xsd:attribute name="sequence" type="xsd:string"/>
        <xsd:attribute name="type">
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="c8o"/>
                    <xsd:enumeration value="project"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
</xsd:schema>
