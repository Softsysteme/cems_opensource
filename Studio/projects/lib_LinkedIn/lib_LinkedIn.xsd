<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:lib_LinkedIn_ns="http://www.convertigo.com/convertigo/projects/lib_LinkedIn" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://www.convertigo.com/convertigo/projects/lib_LinkedIn">
<xsd:complexType name="ConvertigoError">
<xsd:sequence>
<xsd:element name="context" type="lib_LinkedIn_ns:ConvertigoErrorContext"/>
<xsd:element name="exception" type="xsd:string"/>
<xsd:element name="message" type="xsd:string"/>
<xsd:element name="stacktrace" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ConvertigoErrorContextVariable">
<xsd:attribute name="name" type="xsd:string"/>
<xsd:attribute name="value" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="ConvertigoErrorContext">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="variable" type="lib_LinkedIn_ns:ConvertigoErrorContextVariable"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="LinkedIn__GetOAuthTokenResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="Token" type="xsd:string"/>
<xsd:element minOccurs="0" name="error" type="lib_LinkedIn_ns:ConvertigoError"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="LinkedIn__VerifyOAuthTokenResponseData"/>
<xsd:complexType name="transaction1295691094775StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_LinkedIn_ns:LinkedIn__SearchPeopleResponseData">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="LinkedIn_SearchPeople_document_people-search_people_personType">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="id" type="xsd:string"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="first-name" type="xsd:string"/>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="last-name" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="LinkedIn_SearchPeople_document_people-search_peopleType">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="person" type="lib_LinkedIn_ns:LinkedIn_SearchPeople_document_people-search_people_personType"/>
</xsd:sequence>
<xsd:attribute name="count" type="xsd:byte"/>
<xsd:attribute name="start" type="xsd:byte"/>
<xsd:attribute name="total" type="xsd:byte"/>
</xsd:complexType>
<xsd:complexType name="LinkedIn_SearchPeople_document_people-searchType">
<xsd:sequence>
<xsd:element minOccurs="0" name="people" type="lib_LinkedIn_ns:LinkedIn_SearchPeople_document_people-search_peopleType"/>
<xsd:element minOccurs="0" name="num-results" type="xsd:integer"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="LinkedIn__SearchPeopleResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="people-search" type="lib_LinkedIn_ns:LinkedIn_SearchPeople_document_people-searchType"/>
<xsd:element minOccurs="0" name="error" type="lib_LinkedIn_ns:ConvertigoError"/>
</xsd:sequence>
<xsd:attribute name="connector" type="xsd:string"/>
<xsd:attribute name="context" type="xsd:string"/>
<xsd:attribute name="contextId" type="xsd:string"/>
<xsd:attribute name="fromcache" type="xsd:boolean"/>
<xsd:attribute name="generated" type="xsd:string"/>
<xsd:attribute name="project" type="xsd:string"/>
<xsd:attribute name="sequence" type="xsd:string"/>
<xsd:attribute name="signature" type="xsd:long"/>
<xsd:attribute name="transaction" type="xsd:string"/>
<xsd:attribute name="version" type="xsd:string"/>
</xsd:complexType>
<xsd:complexType name="transaction1295694916011StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_LinkedIn_ns:LinkedIn__SearchPeopleResponseData">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1295715465022StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_LinkedIn_ns:LinkedIn__SearchPeopleResponseData">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1295717245791StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_LinkedIn_ns:LinkedIn__SearchPeopleResponseData">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SearchPeopleSampleResponseData">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="person" type="lib_LinkedIn_ns:LinkedIn_SearchPeople_document_people-search_people_personType"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1295717317026StepType">
<xsd:annotation/>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_LinkedIn_ns:LinkedIn__SearchPeopleResponseData">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="LinkedIn__GetConnectionsResponseData"/>
<xsd:element name="LinkedIn__GetOAuthToken" type="lib_LinkedIn_ns:LinkedIn__GetOAuthTokenRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This is the first transaction to be called. This must be called within the Login Sequence. The goal of this transaction is to initiate the OAuth protocol. It is mandatory to configure the APIKey and the APISecret variables to the values provided by LinkedIn whenyou register an new Application.




]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="LinkedIn__GetOAuthTokenResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_LinkedIn_ns:LinkedIn__GetOAuthTokenResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="LinkedIn__GetOAuthTokenRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This is the first transaction to be called. This must be called within the Login Sequence. The goal of this transaction is to initiate the OAuth protocol. It is mandatory to configure the APIKey and the APISecret variables to the values provided by LinkedIn whenyou register an new Application.




]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="apiSecret" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>The value of the apiSecret you receive when you register a new application with LinkedIn</xsd:appinfo>
<xsd:documentation><![CDATA[The value of the apiSecret you receive when you register a new application with LinkedIn
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="apiKey" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>The value of the apiKey you receive when you register a new application with LinkedIn</xsd:appinfo>
<xsd:documentation><![CDATA[The value of the apiKey you receive when you register a new application with LinkedIn
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="LinkedInHtml__Authenticate" type="lib_LinkedIn_ns:LinkedInHtml__AuthenticateRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction will use the User and Password variables provided to Authenticate to LinkedIn. As we use the OAuth protocol, LinkedIn will respond with a PinCode this transaction retreives to be verified by the OAuth protcol.


]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="LinkedInHtml__AuthenticateResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_LinkedIn_ns:LinkedInHtml__AuthenticateResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="LinkedInHtml__AuthenticateRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction will use the User and Password variables provided to Authenticate to LinkedIn. As we use the OAuth protocol, LinkedIn will respond with a PinCode this transaction retreives to be verified by the OAuth protcol.


]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="password" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Password</xsd:appinfo>
</xsd:annotation>
</xsd:element>
<xsd:element name="user" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>User name</xsd:appinfo>
</xsd:annotation>
</xsd:element>
<xsd:element name="token" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>OAuth token</xsd:appinfo>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="LinkedInHtml__AuthenticateResponseData">
<xsd:sequence>
<xsd:group minOccurs="0" ref="lib_LinkedIn_ns:LinkedInHtmlTypes"/>
</xsd:sequence>
</xsd:complexType>
<xsd:group name="LinkedInHtmlTypes">
<xsd:sequence>
<xsd:element minOccurs="0" name="error" type="lib_LinkedIn_ns:ConvertigoError"/>
<xsd:element minOccurs="0" name="PinCode" type="lib_LinkedIn_ns:PinCodeTextType"/>
</xsd:sequence>
</xsd:group>
<xsd:complexType name="PinCodeTextType">
<xsd:simpleContent>
<xsd:extension base="xsd:string">
<xsd:attribute name="referer" type="xsd:string" use="optional"/>
</xsd:extension>
</xsd:simpleContent>
</xsd:complexType>
<xsd:element name="Login" type="lib_LinkedIn_ns:LoginRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[The login sequence must be called prior to any other Transaction. This Sequence will handle the OAuth protocol flow and will store the OAuth session key in the 'LinkedIn' context.


]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="LoginResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_LinkedIn_ns:LoginResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="LoginRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[The login sequence must be called prior to any other Transaction. This Sequence will handle the OAuth protocol flow and will store the OAuth session key in the 'LinkedIn' context.


]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="password" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>linked in password</xsd:appinfo>
</xsd:annotation>
</xsd:element>
<xsd:element name="user" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Linked In user name (Email address)</xsd:appinfo>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="LoginResponseData">
<xsd:sequence>
<xsd:element minOccurs="0" name="transaction" type="lib_LinkedIn_ns:transaction1295683265412StepType">
<xsd:annotation>
<xsd:documentation><![CDATA[Authenticate with LinkedIn
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1295683265412StepType">
<xsd:annotation>
<xsd:documentation><![CDATA[Authenticate with LinkedIn
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_LinkedIn_ns:LinkedInHtml__AuthenticateResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction will use the User and Password variables provided to Authenticate to LinkedIn. As we use the OAuth protocol, LinkedIn will respond with a PinCode this transaction retreives to be verified by the OAuth protcol.


]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1295682686491StepType">
<xsd:annotation>
<xsd:documentation><![CDATA[Initiate the OAuth protocol flow
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_LinkedIn_ns:LinkedIn__GetOAuthTokenResponseData">
<xsd:annotation>
<xsd:documentation><![CDATA[This is the first transaction to be called. This must be called within the Login Sequence. The goal of this transaction is to initiate the OAuth protocol. It is mandatory to configure the APIKey and the APISecret variables to the values provided by LinkedIn whenyou register an new Application.




]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="transaction1295689608990StepType">
<xsd:annotation>
<xsd:documentation><![CDATA[Verify pin code returned by LinkedIn
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element minOccurs="0" name="document" type="lib_LinkedIn_ns:LinkedIn__VerifyOAuthTokenResponseData">
<xsd:annotation/>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="LinkedIn__SearchPeople" type="lib_LinkedIn_ns:LinkedIn__SearchPeopleRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[The People Search API returns information about people. It lets you implement most of what shows up when you do a search for "People" in the top right box on LinkedIn.com.



Use the People Search API to find people using keywords, company, name, or other criteria. It returns a list of matching member profiles. Each entry can contain much of the information available on the person's member profile page



By default, we return a very minimal set of fields: the person's id, along with their first and last names. To receive additional information, see http://developer.linkedin.com/docs/DOC-1061 for a list of fields. and http://developer.linkedin.com/docs/DOC-1014 for the field selector syntax you will have to put in the 'fieldset' variable.






]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="LinkedIn__SearchPeopleResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_LinkedIn_ns:LinkedIn__SearchPeopleResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="LinkedIn__SearchPeopleRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[The People Search API returns information about people. It lets you implement most of what shows up when you do a search for "People" in the top right box on LinkedIn.com.



Use the People Search API to find people using keywords, company, name, or other criteria. It returns a list of matching member profiles. Each entry can contain much of the information available on the person's member profile page



By default, we return a very minimal set of fields: the person's id, along with their first and last names. To receive additional information, see http://developer.linkedin.com/docs/DOC-1061 for a list of fields. and http://developer.linkedin.com/docs/DOC-1014 for the field selector syntax you will have to put in the 'fieldset' variable.






]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="keywords" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Keywords for searching the members</xsd:appinfo>
</xsd:annotation>
</xsd:element>
<xsd:element name="start" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>The start index of the data to be retreived</xsd:appinfo>
</xsd:annotation>
</xsd:element>
<xsd:element name="count" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>The number of items to be retreived (Max 25)</xsd:appinfo>
</xsd:annotation>
</xsd:element>
<xsd:element name="fieldset" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>The field selector syntax as described in http://developer.linkedin.com/docs/DOC-1014</xsd:appinfo>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="LinkedIn__VerifyOAuthToken" type="lib_LinkedIn_ns:LinkedIn__VerifyOAuthTokenRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction verifies the OAuth pincode. It  is called by the login sequence and must not be called directly.  
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="LinkedIn__VerifyOAuthTokenResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_LinkedIn_ns:LinkedIn__VerifyOAuthTokenResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="LinkedIn__VerifyOAuthTokenRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This transaction verifies the OAuth pincode. It  is called by the login sequence and must not be called directly.  
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="PinCode" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>new variable</xsd:appinfo>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="LinkedIn__GetConnections" type="lib_LinkedIn_ns:LinkedIn__GetConnectionsRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[The Connections API returns a list of connections for a user who has granted access to his/her account. You can control the fields you want to have returned and the number of connections returned for each call.



This API doesn't return e-mail addresses for the connections. E-mail addresses are never exposed through LinkedIn APIs.

You cannot "browse connections." That is, you can only get the connections of the user who granted your application access. You cannot get connections of that user's connections.




]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="LinkedIn__GetConnectionsResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_LinkedIn_ns:LinkedIn__GetConnectionsResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="LinkedIn__GetConnectionsRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[The Connections API returns a list of connections for a user who has granted access to his/her account. You can control the fields you want to have returned and the number of connections returned for each call.



This API doesn't return e-mail addresses for the connections. E-mail addresses are never exposed through LinkedIn APIs.

You cannot "browse connections." That is, you can only get the connections of the user who granted your application access. You cannot get connections of that user's connections.




]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="start" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Start index of data to retreive</xsd:appinfo>
</xsd:annotation>
</xsd:element>
<xsd:element name="count" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>Number of items to retreive  (5000 by default)</xsd:appinfo>
</xsd:annotation>
</xsd:element>
<xsd:element name="fieldset" type="xsd:string">
<xsd:annotation>
<xsd:appinfo>The field selector syntax as described in http://developer.linkedin.com/docs/DOC-1014</xsd:appinfo>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="SearchPeopleSample" type="lib_LinkedIn_ns:SearchPeopleSampleRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This is a sample showing how to loop on the results of a SearchPeople transaction. It will return all occurences of persons searched
]]></xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SearchPeopleSampleResponse">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="response" type="lib_LinkedIn_ns:SearchPeopleSampleResponseData"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="SearchPeopleSampleRequestData">
<xsd:annotation>
<xsd:documentation><![CDATA[This is a sample showing how to loop on the results of a SearchPeople transaction. It will return all occurences of persons searched
]]></xsd:documentation>
</xsd:annotation>
<xsd:sequence/>
</xsd:complexType>
</xsd:schema>
