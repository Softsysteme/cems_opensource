<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
			 xmlns:mx="library://ns.adobe.com/flex/mx"
			 minWidth="14" minHeight="14"
			 alpha.disabled="0.5">

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<s:states>
		<s:State name="normal"/>
		<s:State name="disabled"/>
		<s:State name="focused"/>
		<s:State name="invalid"/>
		<s:State name="normalWithPrompt"/>
		<s:State name="disabledWithPrompt"/>
	</s:states>
	
    <fx:Script>
        /* Define the skin elements that should not be colorized. */
        static private const exclusions:Array = ["background", "textDisplay"];
        override public function get colorizeExclusions():Array {return exclusions;}
        
        /* Define the content fill items that should be colored by the "contentBackgroundColor" style. */
        static private const contentFill:Array = null; // = ["bgFill"];
        override public function get contentItems():Array {return contentFill};
    </fx:Script>

	<fx:Metadata>
		[HostComponent("com.convertigo.convertiflex.CTextInput")]
	</fx:Metadata> 
	
    <s:transitions>
    	<s:Transition fromState="normal" toState="focused" >
    		<s:AnimateColor duration="350" targets="{[bgFill,  stroke]}" />
    	</s:Transition> 
    	<s:Transition fromState="focused" toState="normal" >
    		<s:AnimateColor duration="350" targets="{[bgFill,  stroke]}" />
    	</s:Transition> 
    </s:transitions>

	<s:Rect blendMode="normal" left="1" right="1" top="1" bottom="1" radiusX="3" radiusY="3" alpha="1">
	 	<s:fill >
			<s:SolidColor id="bgFill" color="{getStyle('fillColor')}" color.focused="{getStyle('fillColorFocus')}"  />			
        </s:fill>
        <s:stroke>            
            <s:SolidColorStroke id="stroke" color="{getStyle('strokeColor')}" color.focused="{getStyle('strokeColorFocus')}"  weight="1" />
        </s:stroke>
    </s:Rect>
	
    <s:RichEditableText id="textDisplay" color.normal="{getStyle('colorNormal')}" color.focused="{getStyle('color')}" color.invalid="{getStyle('colorInvalid')}" 
			verticalAlign="middle" 
            left="1" right="1" top="1" bottom="1" 
			paddingLeft="3" paddingTop="5"
            paddingRight="3" paddingBottom="3"/>
	
</s:SparkSkin>
